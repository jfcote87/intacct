// Copyright 2019 James Cote
// All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by intacct v3 schema; DO NOT EDIT.

package v21

import (
	"encoding/base64"
	"encoding/xml"
	"log"
	"time"

	"github.com/jfcote87/intacct"
)

// DateYMD used to handle intact YMD format
type DateYMD struct {
	*time.Time
}

func (dx DateYMD) Val() *time.Time {
	if dx.Time != nil && dx.Time.IsZero() {
		return nil
	}
	return dx.Time
}

// ParseDateYMD parse a string into a DateYMD pointer.
// A nil is returned on an error.
func TimeToDateYMD(tm time.Time) DateYMD {
	if tm.IsZero() {
		return DateYMD{}
	}
	return DateYMD{
		Time: &tm,
	}
}

// MarshalXML to year month day
func (dx DateYMD) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	d := dx.Val()
	if d == nil {
		return nil
	}
	err := e.EncodeToken(start)
	if err == nil {
		e.EncodeElement(d.Year(), xml.StartElement{Name: xml.Name{Local: "year"}})
	}
	if err == nil {
		e.EncodeElement(d.Month(), xml.StartElement{Name: xml.Name{Local: "month"}})
	}
	if err == nil {
		e.EncodeElement(d.Day(), xml.StartElement{Name: xml.Name{Local: "day"}})
	}
	if err == nil {
		e.EncodeToken(xml.EndElement{Name: start.Name})
	}
	return nil

}

// UnmarshalXML from Y-M-D format
func (dx *DateYMD) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {

	log.Printf("Stat Element: %s", start.Name.Local)
	var t = struct {
		XMLName xml.Name
		Year    int `xml:"year"`
		Month   int `xml:"month"`
		Day     int `xml:"day"`
	}{
		XMLName: start.Name,
	}
	if err := d.DecodeElement(&t, &start); err != nil {
		return err
	}
	if t.Year == 0 && t.Month == 0 && t.Day == 0 {
		dx.Time = nil
		return nil
	}
	tm := time.Date(t.Year, time.Month(t.Month), t.Day, 0, 0, 0, 0, time.UTC)

	if !tm.IsZero() {
		dx.Time = &tm
	}
	return nil
}

// Get formats a get function.  The Object name
// should be lowercase as should the field names.
//
type Get struct {
	XMLName     xml.Name  `xml:"get"`
	ObjectName  string    `xml:"object,attr"`
	Key         string    `xml:"key,attr"`
	ExternalKey bool      `xml:"externalkey,attr"`
	Fields      *[]string `xml:"fields>field"`
}

// GetList formats a get_list function. Object Name
// should be lowercase as should the fields.
type GetList struct {
	XMLName              xml.Name     `xml:"get_list"`
	ObjectName           string       `xml:"object,attr"`
	MaxItems             int          `xml:"maxitems,attr"`
	ShowPrivate          bool         `xml:"showprivate,attr,omitempty"`
	Start                string       `xml:"start,attr,omitempty"`
	Filter               *Expression  `xml:"filter,omitempty"`
	Sorts                *[]Sort      `xml:"sorts>sortfield,omitempty"`
	Fields               *[]string    `xml:"fields>field,omitempty"`
	AdditionalParameters *[]Parameter `xml:"additional_parameters>parameter,omitempty"`
}

// Parameter represents a name/value pair used by the get_list
// function for additional parameters
type Parameter struct {
	// Start Sequence
	Name  string `xml:"name"`
	Value string `xml:"value"`
	// End Sequence
}

// Sort formats the <sort> element of a get_list command
type Sort struct {
	Order string `xml:"order,attr"`
	Name  string `xml:",innerxml"`
}

// ExprType enums are the possible logical operators for a get_list filter
type ExprType uint8

// ExprType Constants
const (
	ExpressionEqual ExprType = iota
	ExpressionNotEqual
	ExpressionLessThan
	ExpressionLessThanEqual
	ExpressionGreaterThan
	ExpressionGreaterThanEqual
	ExpressionLike
	ExpressionNotLike
	ExpresssionIsNull
	ExpressionLogicalAnd
	ExpressionLogicalOr
)

var exprOpSlice = []string{"=", "!=", "<=", "<=", ">", ">=", "like", "not like", "is null", "and", "or"}

// Expression formats a get_list filter
type Expression struct {
	Type        ExprType     `xml:"operator,omitempty"`
	Field       string       `xml:"field,omitempty"`
	Value       string       `xml:"value,omitempty"`
	Expressions []Expression `xml:"filter,omitempty"`
}

// NewFilterExpression creates a logical and/or collection expression
func NewFilterExpression(t ExprType, field, value string, ex ...Expression) Expression {
	return Expression{Type: t, Field: field, Value: value, Expressions: ex}
}

// MarshalXML formats an Expression collection
func (x Expression) MarshalXML(e *xml.Encoder, s xml.StartElement) error {
	if s.Name.Local == "filter" {
		e.EncodeToken(s)
		x.MarshalXML(e, xml.StartElement{})
		e.EncodeToken(xml.EndElement{Name: s.Name})
		return nil
	}
	if x.Type < ExpressionLogicalAnd {
		s.Name.Local = "expression"
		data := struct {
			Field    string `xml:"field"`
			Operator string `xml:"operator"`
			Value    string `xml:"value"`
		}{
			Field:    x.Field,
			Operator: exprOpSlice[x.Type],
			Value:    x.Value,
		}
		return e.EncodeElement(data, s)
	}
	s = xml.StartElement{
		Name: xml.Name{Local: "logical"},
		Attr: []xml.Attr{
			xml.Attr{
				Name:  xml.Name{Local: "logical_operator"},
				Value: exprOpSlice[x.Type],
			},
		},
	}

	err := e.EncodeToken(s)
	if err == nil {
		if err = e.Encode(x.Expressions); err == nil {
			err = e.EncodeToken(xml.EndElement{Name: s.Name})
		}
	}
	return err
}

// Attachment contains the binary data for the files in
// a supdoc
type Attachment struct {
	// Start Sequence
	AttachmentName string `xml:"attachmentname"`
	AttachmentType string `xml:"attachmenttype"`
	AttachmentData []byte `xml:"attachmentdata"`
	// End Sequence
}

// MarshalXML base64 encodes the attachment data
func (a Attachment) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	err := e.EncodeToken(start)
	if err == nil {
		err = e.EncodeElement(a.AttachmentName, xml.StartElement{Name: xml.Name{Local: "attachmentname"}})
	}
	if err == nil {
		err = e.EncodeElement(a.AttachmentType, xml.StartElement{Name: xml.Name{Local: "attachmenttype"}})
	}
	if err == nil {
		err = e.EncodeElement(base64.StdEncoding.EncodeToString(a.AttachmentData), xml.StartElement{Name: xml.Name{Local: "attachmentdata"}})
	}
	if err == nil {
		err = e.EncodeToken(start.End())
	}
	return err
}

// UnmarshalXML base64 decodes the attachment data
func (a *Attachment) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tk, err := d.Token()

	for err == nil {
		switch t := tk.(type) {
		case xml.StartElement:
			var s string
			if err = d.DecodeElement(&s, &start); err != nil {
				return err
			}
			switch t.Name.Local {
			case "attachmentdata":
				a.AttachmentData, err = base64.StdEncoding.DecodeString(s)
				if err != nil {
					return err
				}
			case "attachmentname":
				a.AttachmentName = s
			case "attachmenttype":
				a.AttachmentType = s
			}
		case xml.EndElement:
			return nil
		}
		tk, err = d.Token()
	}
	return err
}

// CreateSupdoc adds a new supdoc
type CreateSupdoc struct {
	XMLName xml.Name `xml:"create_supdoc"`
	// Start Sequence
	SupdocID          string       `xml:"supdocid"`
	SupdocName        string       `xml:"supdocname,omitempty"`
	SupdocfolderName  string       `xml:"supdocfoldername,omitempty"`
	Supdocdescription string       `xml:"supdocdescription,omitempty"`
	Attachments       []Attachment `xml:"attachments>attachment,omitempty"`
	// End Sequence
}

// CreateSupdocfolder adds a new supdocfolders
type CreateSupdocfolder struct {
	XMLName xml.Name `xml:"create_supdocfolder"`
	// Start Sequence
	SupdocfolderName        string `xml:"supdocfoldername"`
	Supdocfolderdescription string `xml:"supdocfolderdescription,omitempty"`
	SupdocparentfolderName  string `xml:"supdocparentfoldername,omitempty"`
	// End Sequence
}

// DeleteSupdoc removes a supdoc record
type DeleteSupdoc struct {
	XMLName xml.Name `xml:"delete_supdoc"`
	Key     string   `xml:"key,attr"`
}

// DeleteSupdocfolder removes a supdoc record
type DeleteSupdocfolder struct {
	XMLName xml.Name `xml:"delete_supdocfolder"`
	Key     string   `xml:"key,attr"`
}

// UpdateSupdoc modifies an existing supdoc record
type UpdateSupdoc struct {
	XMLName xml.Name `xml:"update_supdoc"`
	// Start Sequence
	SupdocID          string       `xml:"supdocid"`
	SupdocName        string       `xml:"supdocname,omitempty"`
	SupdocfolderName  string       `xml:"supdocfoldername,omitempty"`
	Supdocdescription string       `xml:"supdocdescription,omitempty"`
	Attachments       []Attachment `xml:"attachments>attachment,omitempty"`
	// End Sequence
}

// UpdateSupdocfolder modifies a supdocfolder record
type UpdateSupdocfolder struct {
	XMLName xml.Name `xml:"update_supdocfolder"`
	// Start Sequence
	SupdocfolderName        string `xml:"supdocfoldername"`
	Supdocfolderdescription string `xml:"supdocfolderdescription,omitempty"`
	SupdocparentfolderName  string `xml:"supdocparentfoldername,omitempty"`
	// End Sequence
}

type AllocationEntry struct {
	// Start Sequence
	Entry Entry `xml:"entry"`
	// End Sequence
}

type APAdjustmentItems struct {
	// Start Sequence
	LineItem []LineItem `xml:"lineitem"`
	// End Sequence
}

type APPaymentKeys struct {
	// Start Sequence
	APPaymentKey []string `xml:"appaymentkey"`
	// End Sequence
}

type ApplyARPayment struct {
	// Start Sequence
	Arpaymentkey   string           `xml:"arpaymentkey"`
	PaymentDate    intacct.Date     `xml:"paymentdate"`
	Batchkey       string           `xml:"batchkey,omitempty"`
	Memo           string           `xml:"memo,omitempty"`
	OverpayLocID   string           `xml:"overpaylocid,omitempty"`
	OverpayDeptID  string           `xml:"overpaydeptid,omitempty"`
	Arpaymentitems []ARPaymentItems `xml:"arpaymentitems,omitempty"`
	// End Sequence
}

type ApproveAPPaymentrequest struct {
	// Start Sequence
	APPaymentKeys APPaymentKeys `xml:"appaymentkeys"`
	// End Sequence
}

type ARAdjustmentItems struct {
	// Start Sequence
	LineItem []LineItem `xml:"lineitem"`
	// End Sequence
}

type Arguments struct {
	// Start Sequence
	Any string `xml:",innerxml"`
	// End Sequence
}

type ARPaymentItem struct {
	// Start Sequence
	InvoiceKey string `xml:"invoicekey"`
	Amount     string `xml:"amount"`
	// End Sequence
}

type ARPaymentItemDetail struct {
	// Start Sequence
	ARPaymentLineItemKey string `xml:"arpaymentlineitemkey"`
	InvoiceLineItemKey   string `xml:"invoicelineitemkey"`
	Amount               string `xml:"amount"`
	// End Sequence
}

type ARPaymentItemDetails struct {
	// Start Sequence
	ARPaymentItemDetail []ARPaymentItemDetail `xml:"arpaymentitemdetail"`
	// End Sequence
}

type ARPaymentItems struct {
	// Start Sequence
	ARPaymentItem []ARPaymentItem `xml:"arpaymentitem"`
	// End Sequence
}

type BankTxn struct {
	// Start Sequence
	PostingDate DateYMD `xml:"postingdate"`
	TxnType     string  `xml:"txntype"`
	DocType     string  `xml:"doctype"`
	Document    string  `xml:"document"`
	Payee       string  `xml:"payee"`
	Amount      string  `xml:"amount"`
	Description string  `xml:"description,omitempty"`
	// End Sequence
}

type BankTxns struct {
	// Start Sequence
	Banktxn []BankTxn `xml:"banktxn"`
	// End Sequence
}

type BillItems struct {
	// Start Sequence
	LineItem []LineItem `xml:"lineitem"`
	// End Sequence
}

type BillTo struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type BookContact struct {
	// Start Sequence
	Name string `xml:"name"`
	// End Sequence
}

type BookEntityJournal struct {
	// Start Sequence
	Symbol string `xml:"symbol"`
	Title  string `xml:"title,omitempty"`
	// End Sequence
}

type BookStatJournal struct {
	// Start Sequence
	Symbol string `xml:"symbol"`
	Title  string `xml:"title,omitempty"`
	// End Sequence
}

type BudgetHeader struct {
	// Start Sequence
	BudgetID string `xml:"budgetid"`
	// End Sequence
}

type CCPayItem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Description   string        `xml:"description,omitempty"`
	Paymentamount string        `xml:"paymentamount"`
	DepartmentID  string        `xml:"departmentid,omitempty"`
	LocationID    string        `xml:"locationid,omitempty"`
	CustomerID    string        `xml:"customerid,omitempty"`
	VendorID      string        `xml:"vendorid,omitempty"`
	EmployeeID    string        `xml:"employeeid,omitempty"`
	ProjectID     string        `xml:"projectid,omitempty"`
	ItemID        string        `xml:"itemid,omitempty"`
	ClassID       string        `xml:"classid,omitempty"`
	ContractID    string        `xml:"contractid,omitempty"`
	WarehouseID   string        `xml:"warehouseid,omitempty"`
	CustomFields  *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type CCPayItems struct {
	// Start Sequence
	CCPayItem []CCPayItem `xml:"ccpayitem"`
	// End Sequence
}

type Check struct {
	// Start Sequence
	BankAccountID string `xml:"bankaccountid"`
	CheckNo       string `xml:"checkno,omitempty"`
	// End Sequence
}

type CheckInfoContact struct {
	// Start Sequence
	CompanyName string       `xml:"companyname,omitempty"`
	ContactName string       `xml:"contactname,omitempty"`
	Mailaddress *Mailaddress `xml:"mailaddress,omitempty"`
	Phone1      string       `xml:"phone1,omitempty"`
	// End Sequence
}

type CheckLayout struct {
	// Start Sequence
	Dfltcnyaddr      string `xml:"dfltcnyaddr,omitempty"`
	Checkprintformat string `xml:"checkprintformat,omitempty"`
	Checkpaperformat string `xml:"checkpaperformat,omitempty"`
	Sigline2amount   string `xml:"sigline2amount,omitempty"`
	PrintLineItems   string `xml:"printlineitems,omitempty"`
	BankAcctalign    string `xml:"bankacctalign,omitempty"`
	Spacestoappend   string `xml:"spacestoappend,omitempty"`
	Checknolength    string `xml:"checknolength,omitempty"`
	Voidtext         string `xml:"voidtext,omitempty"`
	// End Sequence
}

type CompLineItem struct {
	// Start Sequence
	Componentkey    string `xml:"componentkey"`
	Quantity        string `xml:"quantity,omitempty"`
	Revpercent      string `xml:"revpercent,omitempty"`
	DeleteComponent string `xml:"delete_component,omitempty"`
	Kcdlvrstatus    string `xml:"kcdlvrstatus,omitempty"`
	Kcrevdefstatus  string `xml:"kcrevdefstatus,omitempty"`
	// End Sequence
}

type CompLineItems struct {
	// Start Sequence
	CompLineItem []CompLineItem `xml:"complineitem"`
	// End Sequence
}

type ConfirmAPPaymentRequest struct {
	// Start Sequence
	APPaymentKeys APPaymentKeys `xml:"appaymentkeys"`
	// End Sequence
}

type Consolidate struct {
	BookID                  string    `xml:"bookid"`
	Offline                 string    `xml:"offline,omitempty"`
	Updatesucceedingperiods string    `xml:"updatesucceedingperiods,omitempty"`
	Changesonly             string    `xml:"changesonly,omitempty"`
	Email                   string    `xml:"email,omitempty"`
	ReportingperiodName     string    `xml:"reportingperiodname"`
	Entities                *Entities `xml:"entities,omitempty"`
}

type Contact struct {
	// Start Sequence
	ContactName string       `xml:"contactname"`
	Printas     string       `xml:"printas"`
	Taxable     string       `xml:"taxable,omitempty"`
	CompanyName string       `xml:"companyname,omitempty"`
	TaxGroup    string       `xml:"taxgroup,omitempty"`
	Prefix      string       `xml:"prefix,omitempty"`
	FirstName   string       `xml:"firstname,omitempty"`
	LastName    string       `xml:"lastname,omitempty"`
	Initial     string       `xml:"initial,omitempty"`
	Phone1      string       `xml:"phone1,omitempty"`
	Phone2      string       `xml:"phone2,omitempty"`
	CellPhone   string       `xml:"cellphone,omitempty"`
	Pager       string       `xml:"pager,omitempty"`
	Fax         string       `xml:"fax,omitempty"`
	Email1      string       `xml:"email1,omitempty"`
	Email2      string       `xml:"email2,omitempty"`
	URL1        string       `xml:"url1,omitempty"`
	URL2        string       `xml:"url2,omitempty"`
	Status      string       `xml:"status,omitempty"`
	Mailaddress *Mailaddress `xml:"mailaddress,omitempty"`
	TaxID       string       `xml:"taxid,omitempty"`
	// End Sequence
}

type ContactInfo struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type ContactItem struct {
	// Start Sequence
	Category    string `xml:"category"`
	ContactName string `xml:"contactname"`
	// End Sequence
}

type ContactList struct {
	// Start Sequence
	ContactItem []ContactItem `xml:"contactitem"`
	// End Sequence
}

type Contactto1099 struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type ConvertGLBudgetFpAmountsToEop struct {
	// Start Sequence
	BudgetID          string `xml:"budgetid"`
	GLAccountNo       string `xml:"glaccountno"`
	DepartmentID      string `xml:"departmentid,omitempty"`
	LocationID        string `xml:"locationid,omitempty"`
	ProjectID         string `xml:"projectid,omitempty"`
	CustomerID        string `xml:"customerid,omitempty"`
	VendorID          string `xml:"vendorid,omitempty"`
	EmployeeID        string `xml:"employeeid,omitempty"`
	ItemID            string `xml:"itemid,omitempty"`
	ClassID           string `xml:"classid,omitempty"`
	ContractID        string `xml:"contractid,omitempty"`
	WarehouseID       string `xml:"warehouseid,omitempty"`
	Convertfromperiod string `xml:"convertfromperiod,omitempty"`
	// End Sequence
}

type CreateACHBankconfiguration struct {
	// Start Sequence
	ACHBankID       string `xml:"achbankid"`
	DestinationID   string `xml:"destinationid"`
	DestinationName string `xml:"destinationname,omitempty"`
	OriginID        string `xml:"originid"`
	OriginName      string `xml:"originname,omitempty"`
	Referencecode   string `xml:"referencecode,omitempty"`
	Status          string `xml:"status,omitempty"`
	Eofmarker       string `xml:"eofmarker,omitempty"`
	// End Sequence
}

type CreateAllocation struct {
	// Start Sequence
	AllocationID    string          `xml:"allocationid"`
	Description     string          `xml:"description,omitempty"`
	Status          string          `xml:"status,omitempty"`
	Allocateby      string          `xml:"allocateby,omitempty"`
	Allocateto      string          `xml:"allocateto,omitempty"`
	Docnumber       string          `xml:"docnumber,omitempty"`
	SupDocID        string          `xml:"supdocid,omitempty"`
	AllocationEntry AllocationEntry `xml:"allocationentry"`
	// End Sequence
}

type CreateAPAccountLabel struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno"`
	AccountLabel      string `xml:"accountlabel"`
	Description       string `xml:"description"`
	OffsetGLAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	ExternalID        string `xml:"externalid,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateAPAdjustment struct {
	// Start Sequence
	VendorID     string   `xml:"vendorid"`
	Datecreated  *DateYMD `xml:"datecreated"`
	Dateposted   *DateYMD `xml:"dateposted,omitempty"`
	Batchkey     string   `xml:"batchkey,omitempty"`
	AdjustmentNo string   `xml:"adjustmentno,omitempty"`
	Action       string   `xml:"action,omitempty"`
	BillNo       string   `xml:"billno,omitempty"`
	Description  string   `xml:"description,omitempty"`
	ExternalID   string   `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	NoGL              string            `xml:"nogl,omitempty"`
	CustomFields      *CustomFields     `xml:"customfields,omitempty"`
	APAdjustmentitems APAdjustmentItems `xml:"apadjustmentitems"`
	// End Sequence
}

type CreateAPAdjustmentbatch struct {
	// Start Sequence
	Batchtitle         string               `xml:"batchtitle"`
	Datecreated        *DateYMD             `xml:"datecreated,omitempty"`
	CreateAPAdjustment []CreateAPAdjustment `xml:"create_apadjustment,omitempty"`
	// End Sequence
}

type CreateAppayment struct {
	// Start Sequence
	// Start Choice
	BankAccountID string `xml:"bankaccountid,omitempty"`
	ChargecardID  string `xml:"chargecardid,omitempty"`
	// End Choice
	VendorID            string   `xml:"vendorid"`
	Memo                string   `xml:"memo"`
	Paymentmethod       string   `xml:"paymentmethod,omitempty"`
	CheckDate           *DateYMD `xml:"checkdate"`
	Batchkey            string   `xml:"batchkey,omitempty"`
	CheckNo             string   `xml:"checkno"`
	BillNo              string   `xml:"billno,omitempty"`
	Basepaymentamount   string   `xml:"basepaymentamount,omitempty"`
	PaymentexchrateType string   `xml:"paymentexchratetype,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Payitems Payitems `xml:"payitems"`
	// End Sequence
}

type CreateAPTerm struct {
	// Start Sequence
	Name        string    `xml:"name"`
	Description string    `xml:"description,omitempty"`
	Status      string    `xml:"status,omitempty"`
	Due         *Due      `xml:"due,omitempty"`
	Discount    *Discount `xml:"discount,omitempty"`
	Disccalcon  string    `xml:"disccalcon,omitempty"`
	Penalty     *Penalty  `xml:"penalty,omitempty"`
	// End Sequence
}

type CreateARAccountLabel struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno"`
	AccountLabel      string `xml:"accountlabel"`
	Description       string `xml:"description"`
	OffsetGLAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	ExternalID        string `xml:"externalid,omitempty"`
	Taxcode           string `xml:"taxcode,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateARAdjustment struct {
	// Start Sequence
	CustomerID   string   `xml:"customerid"`
	Datecreated  *DateYMD `xml:"datecreated"`
	Dateposted   *DateYMD `xml:"dateposted,omitempty"`
	Batchkey     string   `xml:"batchkey,omitempty"`
	AdjustmentNo string   `xml:"adjustmentno,omitempty"`
	Action       string   `xml:"action,omitempty"`
	InvoiceNo    string   `xml:"invoiceno,omitempty"`
	Description  string   `xml:"description,omitempty"`
	ExternalID   string   `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	NoGL              string            `xml:"nogl,omitempty"`
	ARAdjustmentitems ARAdjustmentItems `xml:"aradjustmentitems"`
	// End Sequence
}

type CreateARAdjustmentbatch struct {
	// Start Sequence
	Batchtitle         string               `xml:"batchtitle"`
	Datecreated        *DateYMD             `xml:"datecreated,omitempty"`
	CreateARAdjustment []CreateARAdjustment `xml:"create_aradjustment,omitempty"`
	// End Sequence
}

type CreateArpayment struct {
	// Start Sequence
	CustomerID       string `xml:"customerid"`
	Paymentamount    string `xml:"paymentamount"`
	Translatedamount string `xml:"translatedamount,omitempty"`
	// Start Choice
	Batchkey       string `xml:"batchkey,omitempty"`
	BankAccountID  string `xml:"bankaccountid,omitempty"`
	Undepfundsacct string `xml:"undepfundsacct,omitempty"`
	// End Choice
	RefID         string   `xml:"refid,omitempty"`
	OverpaylocID  string   `xml:"overpaylocid,omitempty"`
	OverpaydeptID string   `xml:"overpaydeptid,omitempty"`
	Datereceived  *DateYMD `xml:"datereceived,omitempty"`
	Paymentmethod string   `xml:"paymentmethod,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CcType        string          `xml:"cctype,omitempty"`
	Authcode      string          `xml:"authcode,omitempty"`
	Arpaymentitem []ARPaymentItem `xml:"arpaymentitem,omitempty"`
	// Start Choice
	Onlinecardpayment *Onlinecardpayment `xml:"onlinecardpayment,omitempty"`
	Onlineachpayment  *Onlineachpayment  `xml:"onlineachpayment,omitempty"`
	// End Choice
	// End Sequence
}

type CreateArpaymentbatch struct {
	// Start Sequence
	Batchtitle string `xml:"batchtitle"`
	// Start Choice
	BankAccountID  string `xml:"bankaccountid,omitempty"`
	Undepfundsacct string `xml:"undepfundsacct,omitempty"`
	// End Choice
	Datecreated     *DateYMD          `xml:"datecreated,omitempty"`
	CreateArpayment []CreateArpayment `xml:"create_arpayment,omitempty"`
	ApplyArpayment  []ApplyARPayment  `xml:"apply_arpayment,omitempty"`
	// End Sequence
}

type CreateARTerm struct {
	// Start Sequence
	Name        string    `xml:"name"`
	Description string    `xml:"description,omitempty"`
	Status      string    `xml:"status,omitempty"`
	Due         *Due      `xml:"due,omitempty"`
	Discount    *Discount `xml:"discount,omitempty"`
	Disccalcon  string    `xml:"disccalcon,omitempty"`
	Penalty     *Penalty  `xml:"penalty,omitempty"`
	// End Sequence
}

type CreateBill struct {
	// Start Sequence
	VendorID    string   `xml:"vendorid"`
	Datecreated *DateYMD `xml:"datecreated"`
	Dateposted  *DateYMD `xml:"dateposted,omitempty"`
	// Start Choice
	// Start Sequence
	Datedue  *DateYMD `xml:"datedue,omitempty"`
	TermName string   `xml:"termname,omitempty"`
	// End Sequence
	//TermName string `xml:"termname,omitempty"`
	// End Choice
	Action      string    `xml:"action,omitempty"`
	Batchkey    string    `xml:"batchkey,omitempty"`
	BillNo      string    `xml:"billno,omitempty"`
	Ponumber    string    `xml:"ponumber,omitempty"`
	Onhold      string    `xml:"onhold,omitempty"`
	Description string    `xml:"description,omitempty"`
	ExternalID  string    `xml:"externalid,omitempty"`
	Payto       *Payto    `xml:"payto,omitempty"`
	Returnto    *Returnto `xml:"returnto,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	NoGL         string        `xml:"nogl,omitempty"`
	SupDocID     string        `xml:"supdocid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Billitems    BillItems     `xml:"billitems"`
	// End Sequence
}

type CreateBillbatch struct {
	// Start Sequence
	Batchtitle  string       `xml:"batchtitle"`
	Datecreated *DateYMD     `xml:"datecreated,omitempty"`
	CreateBill  []CreateBill `xml:"create_bill,omitempty"`
	// End Sequence
}

type CreateCheckingaccount struct {
	// Start Sequence
	BankAccountID string         `xml:"bankaccountid"`
	BankAccountNo string         `xml:"bankaccountno,omitempty"`
	LocationID    string         `xml:"locationid"`
	BankName      string         `xml:"bankname"`
	RoutingNo     string         `xml:"routingno,omitempty"`
	BranchID      string         `xml:"branchid,omitempty"`
	Phone         string         `xml:"phone,omitempty"`
	Currency      string         `xml:"currency,omitempty"`
	Mailaddress   *Mailaddress   `xml:"mailaddress,omitempty"`
	Status        string         `xml:"status,omitempty"`
	Disableiet    string         `xml:"disableiet,omitempty"`
	FinancialData *FinancialData `xml:"financialdata,omitempty"`
	GLAccountNo   string         `xml:"glaccountno,omitempty"`
	// Start Choice
	ServicechargeGLAccount    string `xml:"servicechargeglaccount,omitempty"`
	Servicechargeaccountlabel string `xml:"servicechargeaccountlabel,omitempty"`
	// End Choice
	// Start Choice
	InterestearnedGLAccount    string `xml:"interestearnedglaccount,omitempty"`
	Interestearnedaccountlabel string `xml:"interestearnedaccountlabel,omitempty"`
	// End Choice
	DepartmentID          string            `xml:"departmentid,omitempty"`
	Checkinfocontact      *CheckInfoContact `xml:"checkinfocontact,omitempty"`
	Checklayout           *CheckLayout      `xml:"checklayout,omitempty"`
	Nextcheck             string            `xml:"nextcheck,omitempty"`
	ACHEnabled            string            `xml:"achenabled,omitempty"`
	ACHBankID             string            `xml:"achbankid,omitempty"`
	CompanyName           string            `xml:"companyname,omitempty"`
	Companyidentification string            `xml:"companyidentification,omitempty"`
	Financialinstitution  string            `xml:"financialinstitution,omitempty"`
	Description           string            `xml:"description,omitempty"`
	DiscretionaryData     string            `xml:"discretionarydata,omitempty"`
	Userecommendedsetup   string            `xml:"userecommendedsetup,omitempty"`
	Serviceclasscode      string            `xml:"serviceclasscode,omitempty"`
	BatchID               string            `xml:"batchid,omitempty"`
	Tracenumberseq        string            `xml:"tracenumberseq,omitempty"`
	Usetracenumber        string            `xml:"usetracenumber,omitempty"`
	Docnumberseq          string            `xml:"docnumberseq,omitempty"`
	Visibility            *Visibility       `xml:"visibility,omitempty"`
	Outsourcecheck        string            `xml:"outsourcecheck,omitempty"`
	FractionalroutingNo   string            `xml:"fractionalroutingno,omitempty"`
	Nameontheaccount      string            `xml:"nameontheaccount,omitempty"`
	Amexchecknum          string            `xml:"amexchecknum,omitempty"`
	Outsourceach          string            `xml:"outsourceach,omitempty"`
	AboFirstName          string            `xml:"abo_first_name,omitempty"`
	AboMiddleName         string            `xml:"abo_middle_name,omitempty"`
	AboLastName           string            `xml:"abo_last_name,omitempty"`
	AboPhoneNumber        string            `xml:"abo_phone_number,omitempty"`
	AboEmailID            string            `xml:"abo_email_id,omitempty"`
	// End Sequence
}

type CreateClass struct {
	// Start Sequence
	ClassID      string        `xml:"classid"`
	Name         string        `xml:"name"`
	Description  string        `xml:"description,omitempty"`
	ParentID     string        `xml:"parentid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type CreateConsolidation struct {
	// Start Sequence
	BookID                  string    `xml:"bookid"`
	Offline                 string    `xml:"offline,omitempty"`
	Updatesucceedingperiods string    `xml:"updatesucceedingperiods,omitempty"`
	Changesonly             string    `xml:"changesonly,omitempty"`
	Email                   string    `xml:"email,omitempty"`
	ReportingperiodName     string    `xml:"reportingperiodname"`
	Entities                *Entities `xml:"entities,omitempty"`
	// End Sequence
}

type CreateContact struct {
	// Start Sequence
	ContactName string       `xml:"contactname"`
	Printas     string       `xml:"printas"`
	CompanyName string       `xml:"companyname,omitempty"`
	Taxable     string       `xml:"taxable,omitempty"`
	TaxGroup    string       `xml:"taxgroup,omitempty"`
	Prefix      string       `xml:"prefix,omitempty"`
	FirstName   string       `xml:"firstname,omitempty"`
	LastName    string       `xml:"lastname,omitempty"`
	Initial     string       `xml:"initial,omitempty"`
	Phone1      string       `xml:"phone1,omitempty"`
	Phone2      string       `xml:"phone2,omitempty"`
	CellPhone   string       `xml:"cellphone,omitempty"`
	Pager       string       `xml:"pager,omitempty"`
	Fax         string       `xml:"fax,omitempty"`
	Email1      string       `xml:"email1,omitempty"`
	Email2      string       `xml:"email2,omitempty"`
	URL1        string       `xml:"url1,omitempty"`
	URL2        string       `xml:"url2,omitempty"`
	Status      string       `xml:"status,omitempty"`
	Mailaddress *Mailaddress `xml:"mailaddress,omitempty"`
	TaxID       string       `xml:"taxid,omitempty"`
	ExternalID  string       `xml:"externalid,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateContacttaxgroup struct {
	// Start Sequence
	Name string `xml:"name"`
	// End Sequence
}

type CreateCustomer struct {
	// Start Sequence
	CustomerID        string           `xml:"customerid"`
	Name              string           `xml:"name"`
	ParentID          string           `xml:"parentid,omitempty"`
	TermName          string           `xml:"termname,omitempty"`
	CustrepID         string           `xml:"custrepid,omitempty"`
	Shippingmethod    string           `xml:"shippingmethod,omitempty"`
	CustType          string           `xml:"custtype,omitempty"`
	TaxID             string           `xml:"taxid,omitempty"`
	Creditlimit       string           `xml:"creditlimit,omitempty"`
	TerritoryID       string           `xml:"territoryid,omitempty"`
	ResaleNo          string           `xml:"resaleno,omitempty"`
	Deliveryoptions   *Deliveryoptions `xml:"deliveryoptions,omitempty"`
	AccountLabel      string           `xml:"accountlabel,omitempty"`
	GLAccountNo       string           `xml:"glaccountno,omitempty"`
	GLgroup           string           `xml:"glgroup,omitempty"`
	Onhold            string           `xml:"onhold,omitempty"`
	Comments          string           `xml:"comments,omitempty"`
	Status            string           `xml:"status,omitempty"`
	Currency          string           `xml:"currency,omitempty"`
	ExternalID        string           `xml:"externalid,omitempty"`
	Primary           *Primary         `xml:"primary,omitempty"`
	Billto            *BillTo          `xml:"billto,omitempty"`
	Shipto            *Shipto          `xml:"shipto,omitempty"`
	Contactinfo       *ContactInfo     `xml:"contactinfo,omitempty"`
	Contactlist       *ContactList     `xml:"contactlist,omitempty"`
	Vsoepricelist     string           `xml:"vsoepricelist,omitempty"`
	CustomFields      *CustomFields    `xml:"customfields,omitempty"`
	Visibility        *Visibility      `xml:"visibility,omitempty"`
	SupDocID          string           `xml:"supdocid,omitempty"`
	OffsetGLAccountNo string           `xml:"offsetglaccountno,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateCustomerachinfo struct {
	// Start Sequence
	CustomerID      string `xml:"customerid"`
	BankName        string `xml:"bankname"`
	Bankadd1        string `xml:"bankadd1,omitempty"`
	Bankadd2        string `xml:"bankadd2,omitempty"`
	Aba             string `xml:"aba"`
	Accountnumber   string `xml:"accountnumber"`
	BankAccountType string `xml:"bankaccounttype"`
	// End Sequence
}

type CreateCustomerbankaccount struct {
	// Start Sequence
	CustomerID     string       `xml:"customerid"`
	Accountnumber  string       `xml:"accountnumber"`
	Routingnumber  string       `xml:"routingnumber"`
	AccountType    string       `xml:"accounttype"`
	BankName       string       `xml:"bankname"`
	Accountholder  string       `xml:"accountholder"`
	Description    string       `xml:"description,omitempty"`
	Status         string       `xml:"status,omitempty"`
	Mailaddress    *Mailaddress `xml:"mailaddress,omitempty"`
	Defaultaccount string       `xml:"defaultaccount,omitempty"`
	// End Sequence
}

type CreateCustomerchargecard struct {
	// Start Sequence
	CustomerID    string      `xml:"customerid"`
	Cardnum       string      `xml:"cardnum"`
	CardType      string      `xml:"cardtype"`
	ExpMonth      string      `xml:"exp_month"`
	ExpYear       string      `xml:"exp_year"`
	Description   string      `xml:"description,omitempty"`
	Status        string      `xml:"status,omitempty"`
	Mailaddress   Mailaddress `xml:"mailaddress"`
	Defaultcard   string      `xml:"defaultcard,omitempty"`
	Usebilltoaddr string      `xml:"usebilltoaddr,omitempty"`
	// End Sequence
}

type CreateDepartment struct {
	// Start Sequence
	DepartmentID string        `xml:"departmentid"`
	Title        string        `xml:"title"`
	ParentID     string        `xml:"parentid,omitempty"`
	SupervisorID string        `xml:"supervisorid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	ExternalID   string        `xml:"externalid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Custtitle    string        `xml:"custtitle,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateEarningType struct {
	// Start Sequence
	Name              string        `xml:"name"`
	Method            string        `xml:"method"`
	BillableacctNo    string        `xml:"billableacctno"`
	NonbillableacctNo string        `xml:"nonbillableacctno"`
	Ratemultiplier    string        `xml:"ratemultiplier,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type CreateEmployee struct {
	// Start Sequence
	EmployeeID           string        `xml:"employeeid"`
	Ssn                  string        `xml:"ssn,omitempty"`
	Title                string        `xml:"title,omitempty"`
	LocationID           string        `xml:"locationid,omitempty"`
	DepartmentID         string        `xml:"departmentid,omitempty"`
	ClassID              string        `xml:"classid,omitempty"`
	SupervisorID         string        `xml:"supervisorid,omitempty"`
	BirthDate            *DateYMD      `xml:"birthdate,omitempty"`
	StartDate            *DateYMD      `xml:"startdate,omitempty"`
	EndDate              *DateYMD      `xml:"enddate,omitempty"`
	TerminationType      string        `xml:"terminationtype,omitempty"`
	EmployeeType         string        `xml:"employeetype,omitempty"`
	Gender               string        `xml:"gender,omitempty"`
	Status               string        `xml:"status,omitempty"`
	Currency             string        `xml:"currency,omitempty"`
	ExternalID           string        `xml:"externalid,omitempty"`
	Name1099             string        `xml:"name1099,omitempty"`
	Form1099Type         string        `xml:"form1099type,omitempty"`
	Form1099box          string        `xml:"form1099box,omitempty"`
	EarningtypeName      string        `xml:"earningtypename,omitempty"`
	Postactualcost       string        `xml:"postactualcost,omitempty"`
	Personalinfo         Personalinfo  `xml:"personalinfo"`
	Contactlist          *ContactList  `xml:"contactlist,omitempty"`
	Paymethod            string        `xml:"paymethod,omitempty"`
	Paymentnotify        string        `xml:"paymentnotify,omitempty"`
	ACHEnabled           string        `xml:"achenabled,omitempty"`
	ACHBankroutingnumber string        `xml:"achbankroutingnumber,omitempty"`
	ACHAccountnumber     string        `xml:"achaccountnumber,omitempty"`
	ACHAccountType       string        `xml:"achaccounttype,omitempty"`
	ACHRemittanceType    string        `xml:"achremittancetype,omitempty"`
	CustomFields         *CustomFields `xml:"customfields,omitempty"`
	Mergepaymentreq      string        `xml:"mergepaymentreq,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateEmployeerate struct {
	// Start Sequence
	EmployeeID    string        `xml:"employeeid"`
	RatestartDate *DateYMD      `xml:"ratestartdate"`
	Billingrate   string        `xml:"billingrate,omitempty"`
	Salaryrate    string        `xml:"salaryrate,omitempty"`
	CustomFields  *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type CreateExpenseadjustmentreport struct {
	// Start Sequence
	EmployeeID         string             `xml:"employeeid"`
	Datecreated        *DateYMD           `xml:"datecreated"`
	Dateposted         *DateYMD           `xml:"dateposted,omitempty"`
	Batchkey           string             `xml:"batchkey,omitempty"`
	AdjustmentNo       string             `xml:"adjustmentno,omitempty"`
	Docnumber          string             `xml:"docnumber,omitempty"`
	Description        string             `xml:"description,omitempty"`
	Basecurr           string             `xml:"basecurr,omitempty"`
	Currency           string             `xml:"currency,omitempty"`
	Expenseadjustments Expenseadjustments `xml:"expenseadjustments"`
	SupDocID           string             `xml:"supdocid,omitempty"`
	// End Sequence
}

type CreateExpensepaymentType struct {
	// Start Sequence
	Name            string `xml:"name"`
	Description     string `xml:"description,omitempty"`
	Nonreimbursable string `xml:"nonreimbursable,omitempty"`
	OffsetacctNo    string `xml:"offsetacctno,omitempty"`
	Status          string `xml:"status,omitempty"`
	// End Sequence
}

type CreateExpensereport struct {
	EmployeeID      string        `xml:"employeeid"`
	Datecreated     *DateYMD      `xml:"datecreated"`
	Dateposted      *DateYMD      `xml:"dateposted,omitempty"`
	Batchkey        string        `xml:"batchkey,omitempty"`
	ExpensereportNo string        `xml:"expensereportno,omitempty"`
	State           string        `xml:"state,omitempty"`
	Description     string        `xml:"description,omitempty"`
	Memo            string        `xml:"memo,omitempty"`
	ExternalID      string        `xml:"externalid,omitempty"`
	Basecurr        string        `xml:"basecurr,omitempty"`
	Currency        string        `xml:"currency,omitempty"`
	CustomFields    *CustomFields `xml:"customfields,omitempty"`
	SupDocID        string        `xml:"supdocid,omitempty"`
	Expenses        Expenses      `xml:"expenses"`
}

type CreateExpensereportbatch struct {
	// Start Sequence
	Batchtitle          string                `xml:"batchtitle"`
	Datecreated         *DateYMD              `xml:"datecreated,omitempty"`
	CreateExpensereport []CreateExpensereport `xml:"create_expensereport,omitempty"`
	// End Sequence
}

type CreateExpenseType struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno"`
	ExpenseType       string `xml:"expensetype"`
	Description       string `xml:"description"`
	OffsetGLAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	ExternalID        string `xml:"externalid,omitempty"`
	// End Sequence
}

type CreateGLAccount struct {
	// Start Sequence
	GLAccountNo        string        `xml:"glaccountno"`
	Title              string        `xml:"title"`
	Normalbalance      string        `xml:"normalbalance"`
	AccountType        string        `xml:"accounttype,omitempty"`
	ClosingType        string        `xml:"closingtype,omitempty"`
	ClosingAccountNo   string        `xml:"closingaccountno,omitempty"`
	Status             string        `xml:"status,omitempty"`
	Requiredept        string        `xml:"requiredept,omitempty"`
	Requireloc         string        `xml:"requireloc,omitempty"`
	Requireproject     string        `xml:"requireproject,omitempty"`
	Requirecustomer    string        `xml:"requirecustomer,omitempty"`
	Requirevendor      string        `xml:"requirevendor,omitempty"`
	Requireitem        string        `xml:"requireitem,omitempty"`
	Requireemployee    string        `xml:"requireemployee,omitempty"`
	Requireclass       string        `xml:"requireclass,omitempty"`
	Requirecontract    string        `xml:"requirecontract,omitempty"`
	Requirewarehouse   string        `xml:"requirewarehouse,omitempty"`
	Taxable            string        `xml:"taxable,omitempty"`
	ExternalID         string        `xml:"externalid,omitempty"`
	CustomFields       *CustomFields `xml:"customfields,omitempty"`
	Category           string        `xml:"category,omitempty"`
	Taxcode            string        `xml:"taxcode,omitempty"`
	Mrccode            string        `xml:"mrccode,omitempty"`
	Alternativeaccount string        `xml:"alternativeaccount,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateGLBookacctgroups struct {
	// Start Sequence
	Bookkey      string `xml:"bookkey"`
	Acctgroupkey string `xml:"acctgroupkey"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateGLBookAcctRateTypes struct {
	// Start Sequence
	BookKey         string `xml:"bookkey"`
	GLAccountNo     string `xml:"glaccountno"`
	GLAcctRateTypes string `xml:"glacctratetypes"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateGLBooklocations struct {
	// Start Sequence
	Bookkey           string            `xml:"bookkey"`
	LocationID        string            `xml:"locationid"`
	Bookentityjournal BookEntityJournal `xml:"bookentityjournal"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateGLTransaction struct {
	// Start Sequence
	JournalID            string               `xml:"journalid"`
	Datecreated          *DateYMD             `xml:"datecreated"`
	ReverseDate          *DateYMD             `xml:"reversedate,omitempty"`
	Description          string               `xml:"description"`
	ReferenceNo          string               `xml:"referenceno,omitempty"`
	Sourceentity         string               `xml:"sourceentity,omitempty"`
	CustomFields         *CustomFields        `xml:"customfields,omitempty"`
	GLTransactionentries GLTransactionentries `xml:"gltransactionentries"`
	// End Sequence
}

type CreateIctransaction struct {
	// Start Sequence
	TransactionType string        `xml:"transactiontype"`
	Datecreated     *DateYMD      `xml:"datecreated"`
	Createdfrom     string        `xml:"createdfrom,omitempty"`
	DocumentNo      string        `xml:"documentno,omitempty"`
	ReferenceNo     string        `xml:"referenceno,omitempty"`
	Message         string        `xml:"message,omitempty"`
	ExternalID      string        `xml:"externalid,omitempty"`
	Basecurr        string        `xml:"basecurr,omitempty"`
	CustomFields    *CustomFields `xml:"customfields,omitempty"`
	State           string        `xml:"state,omitempty"`
	ICTransItems    ICTransItems  `xml:"ictransitems"`
	Subtotals       *Subtotals    `xml:"subtotals,omitempty"`
	// End Sequence
}

type CreateInvoice struct {
	// Start Sequence
	CustomerID  string   `xml:"customerid"`
	Datecreated *DateYMD `xml:"datecreated"`
	Dateposted  *DateYMD `xml:"dateposted,omitempty"`
	Datedue     *DateYMD `xml:"datedue,omitempty"`
	TermName    string   `xml:"termname,omitempty"`
	Batchkey    string   `xml:"batchkey,omitempty"`
	Action      string   `xml:"action,omitempty"`
	InvoiceNo   string   `xml:"invoiceno,omitempty"`
	Ponumber    string   `xml:"ponumber,omitempty"`
	Description string   `xml:"description,omitempty"`
	ExternalID  string   `xml:"externalid,omitempty"`
	Billto      *BillTo  `xml:"billto,omitempty"`
	Shipto      *Shipto  `xml:"shipto,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	NoGL         string        `xml:"nogl,omitempty"`
	SupDocID     string        `xml:"supdocid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Invoiceitems Invoiceitems  `xml:"invoiceitems"`
	// End Sequence
}

type CreateInvoicebatch struct {
	// Start Sequence
	Batchtitle    string          `xml:"batchtitle"`
	Datecreated   *DateYMD        `xml:"datecreated,omitempty"`
	CreateInvoice []CreateInvoice `xml:"create_invoice,omitempty"`
	// End Sequence
}

type CreateInvpricelistentry struct {
	// Start Sequence
	PricelistID string `xml:"pricelistid"`
	// Start Choice
	ItemID        string `xml:"itemid,omitempty"`
	ProductlineID string `xml:"productlineid,omitempty"`
	// End Choice
	Datefrom        *DateYMD `xml:"datefrom"`
	Dateto          *DateYMD `xml:"dateto"`
	MinimumQuantity string   `xml:"minimum_quantity,omitempty"`
	MaximumQuantity string   `xml:"maximum_quantity,omitempty"`
	Value           string   `xml:"value"`
	ValueType       string   `xml:"valuetype"`
	Fixed           string   `xml:"fixed"`
	Status          string   `xml:"status,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateItem struct {
	// Start Sequence
	ItemID                   string         `xml:"itemid"`
	Name                     string         `xml:"name"`
	Status                   string         `xml:"status,omitempty"`
	ItemType                 string         `xml:"itemtype"`
	EnableBins               string         `xml:"enable_bins,omitempty"`
	ExtendedDescription      string         `xml:"extended_description,omitempty"`
	ProductlineID            string         `xml:"productlineid,omitempty"`
	SubstituteID             string         `xml:"substituteid,omitempty"`
	ShipWeight               string         `xml:"ship_weight,omitempty"`
	Datelastsold             *DateYMD       `xml:"datelastsold,omitempty"`
	Datelastrecvd            *DateYMD       `xml:"datelastrecvd,omitempty"`
	Taxable                  string         `xml:"taxable,omitempty"`
	CostMethod               string         `xml:"cost_method,omitempty"`
	StandardCost             string         `xml:"standard_cost,omitempty"`
	AverageCost              string         `xml:"average_cost,omitempty"`
	BasePrice                string         `xml:"base_price,omitempty"`
	StandardUnit             string         `xml:"standard_unit,omitempty"`
	PurchaseUnit             string         `xml:"purchase_unit,omitempty"`
	PurchaseUnitFactor       string         `xml:"purchase_unit_factor,omitempty"`
	SalesUnit                string         `xml:"sales_unit,omitempty"`
	SalesUnitFactor          string         `xml:"sales_unit_factor,omitempty"`
	DefaultWarehouse         string         `xml:"default_warehouse,omitempty"`
	GLgroup                  string         `xml:"glgroup,omitempty"`
	Note                     string         `xml:"note,omitempty"`
	InventoryPrecision       string         `xml:"inventory_precision,omitempty"`
	PurchasingPrecision      string         `xml:"purchasing_precision,omitempty"`
	SalesPrecision           string         `xml:"sales_precision,omitempty"`
	Upc                      string         `xml:"upc,omitempty"`
	Hasstartenddates         string         `xml:"hasstartenddates,omitempty"`
	TermPeriod               string         `xml:"term_period,omitempty"`
	Defaultnoofperiods       string         `xml:"defaultnoofperiods,omitempty"`
	Computepriceforshortterm string         `xml:"computepriceforshortterm,omitempty"`
	Itaxgroup                *Itaxgroup     `xml:"itaxgroup,omitempty"`
	RevenuePosting           string         `xml:"revenue_posting,omitempty"`
	VendLineItems            *VendLineItems `xml:"vendlineitems,omitempty"`
	WhsLineItems             *WhsLineItems  `xml:"whslineitems,omitempty"`
	CompLineItems            *CompLineItems `xml:"complineitems,omitempty"`
	Taxcode                  string         `xml:"taxcode,omitempty"`
	Vsoecategory             string         `xml:"vsoecategory,omitempty"`
	Vsoedlvrstatus           string         `xml:"vsoedlvrstatus,omitempty"`
	Vsoerevdefstatus         string         `xml:"vsoerevdefstatus,omitempty"`
	Incomeaccount            string         `xml:"incomeaccount,omitempty"`
	Invaccount               string         `xml:"invaccount,omitempty"`
	Expenseaccount           string         `xml:"expenseaccount,omitempty"`
	Cogsaccount              string         `xml:"cogsaccount,omitempty"`
	OffsetoeGLAccount        string         `xml:"offsetoeglaccount,omitempty"`
	OffsetpoGLAccount        string         `xml:"offsetpoglaccount,omitempty"`
	Defrevaccount            string         `xml:"defrevaccount,omitempty"`
	Uomgrp                   string         `xml:"uomgrp,omitempty"`
	Dropship                 string         `xml:"dropship,omitempty"`
	Cnbillingtemplate        string         `xml:"cnbillingtemplate,omitempty"`
	Cnrevenuetemplate        string         `xml:"cnrevenuetemplate,omitempty"`
	Cnrevenue2template       string         `xml:"cnrevenue2template,omitempty"`
	Cnexpensetemplate        string         `xml:"cnexpensetemplate,omitempty"`
	Cnexpense2template       string         `xml:"cnexpense2template,omitempty"`
	CustomFields             *CustomFields  `xml:"customfields,omitempty"`
	Mrr                      bool           `xml:"mrr,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateItemtaxgroup struct {
	// Start Sequence
	Name string `xml:"name"`
	// End Sequence
}

type CreateJournal struct {
	// Start Sequence
	Symbol     string `xml:"symbol"`
	Title      string `xml:"title"`
	Status     string `xml:"status,omitempty"`
	ExternalID string `xml:"externalid,omitempty"`
	Bookkey    string `xml:"bookkey,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateLocation struct {
	// Start Sequence
	LocationID   string        `xml:"locationid"`
	Name         string        `xml:"name"`
	ParentID     string        `xml:"parentid,omitempty"`
	SupervisorID string        `xml:"supervisorid,omitempty"`
	StartDate    *DateYMD      `xml:"startdate,omitempty"`
	EndDate      *DateYMD      `xml:"enddate,omitempty"`
	Status       string        `xml:"status,omitempty"`
	ExternalID   string        `xml:"externalid,omitempty"`
	Primary      *Primary      `xml:"primary,omitempty"`
	Shipto       *Shipto       `xml:"shipto,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Custtitle    string        `xml:"custtitle,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateLocationgroup struct {
	// Start Sequence
	ID      string `xml:"id"`
	Name    string `xml:"name"`
	Members string `xml:"members"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreatePaymentrequest struct {
	// Start Sequence
	// Start Choice
	BankAccountID string `xml:"bankaccountid,omitempty"`
	ChargecardID  string `xml:"chargecardid,omitempty"`
	// End Choice
	VendorID      string   `xml:"vendorid"`
	Memo          string   `xml:"memo,omitempty"`
	Paymentmethod string   `xml:"paymentmethod"`
	Grouppayments string   `xml:"grouppayments,omitempty"`
	PaymentDate   *DateYMD `xml:"paymentdate"`
	Paymentoption string   `xml:"paymentoption,omitempty"`
	// Start Choice
	Paymentrequestitems *Paymentrequestitems `xml:"paymentrequestitems,omitempty"`
	Paymentamount       string               `xml:"paymentamount,omitempty"`
	// End Choice
	Documentnumber     string `xml:"documentnumber,omitempty"`
	Paymentdescription string `xml:"paymentdescription,omitempty"`
	Paymentcontact     string `xml:"paymentcontact,omitempty"`
	// End Sequence
}

type CreatePopricelist struct {
	// Start Sequence
	Name     string   `xml:"name"`
	Datefrom *DateYMD `xml:"datefrom,omitempty"`
	Dateto   *DateYMD `xml:"dateto,omitempty"`
	Status   string   `xml:"status,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreatePotransaction struct {
	// Start Sequence
	TransactionType string   `xml:"transactiontype"`
	Datecreated     *DateYMD `xml:"datecreated"`
	Dateposted      *DateYMD `xml:"dateposted,omitempty"`
	Createdfrom     string   `xml:"createdfrom,omitempty"`
	VendorID        string   `xml:"vendorid"`
	DocumentNo      string   `xml:"documentno,omitempty"`
	ReferenceNo     string   `xml:"referenceno,omitempty"`
	VendordocNo     string   `xml:"vendordocno,omitempty"`
	TermName        string   `xml:"termname,omitempty"`
	Datedue         *DateYMD `xml:"datedue"`
	Message         string   `xml:"message,omitempty"`
	Shippingmethod  string   `xml:"shippingmethod,omitempty"`
	Returnto        Returnto `xml:"returnto"`
	Payto           Payto    `xml:"payto"`
	SupDocID        string   `xml:"supdocid,omitempty"`
	ExternalID      string   `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	State        string        `xml:"state,omitempty"`
	Potransitems Potransitems  `xml:"potransitems"`
	Subtotals    *Subtotals    `xml:"subtotals,omitempty"`
	// End Sequence
}

type CreateProject struct {
	// Start Sequence
	ProjectID          string             `xml:"projectid"`
	Name               string             `xml:"name"`
	Description        string             `xml:"description,omitempty"`
	ParentID           string             `xml:"parentid,omitempty"`
	Invoicewithparent  string             `xml:"invoicewithparent,omitempty"`
	Projectcategory    string             `xml:"projectcategory"`
	ProjectType        string             `xml:"projecttype,omitempty"`
	Projectstatus      string             `xml:"projectstatus,omitempty"`
	CustomerID         string             `xml:"customerid,omitempty"`
	ManagerID          string             `xml:"managerid,omitempty"`
	CustuserID         string             `xml:"custuserid,omitempty"`
	SalescontactID     string             `xml:"salescontactid,omitempty"`
	BeginDate          *DateYMD           `xml:"begindate,omitempty"`
	EndDate            *DateYMD           `xml:"enddate,omitempty"`
	DepartmentID       string             `xml:"departmentid,omitempty"`
	LocationID         string             `xml:"locationid,omitempty"`
	ClassID            string             `xml:"classid,omitempty"`
	Currency           string             `xml:"currency,omitempty"`
	BillingType        string             `xml:"billingtype,omitempty"`
	TermName           string             `xml:"termname,omitempty"`
	Docnumber          string             `xml:"docnumber,omitempty"`
	Billto             *BillTo            `xml:"billto,omitempty"`
	Shipto             *Shipto            `xml:"shipto,omitempty"`
	Contactinfo        *ContactInfo       `xml:"contactinfo,omitempty"`
	Sonumber           string             `xml:"sonumber,omitempty"`
	Ponumber           string             `xml:"ponumber,omitempty"`
	Poamount           string             `xml:"poamount,omitempty"`
	Pqnumber           string             `xml:"pqnumber,omitempty"`
	Budgetamount       string             `xml:"budgetamount,omitempty"`
	Budgetedcost       string             `xml:"budgetedcost,omitempty"`
	Budgetqty          string             `xml:"budgetqty,omitempty"`
	Userrestrictions   string             `xml:"userrestrictions,omitempty"`
	Obspercentcomplete string             `xml:"obspercentcomplete,omitempty"`
	BudgetID           string             `xml:"budgetid,omitempty"`
	Billingrate        string             `xml:"billingrate,omitempty"`
	Billingpricing     string             `xml:"billingpricing,omitempty"`
	Expenserate        string             `xml:"expenserate,omitempty"`
	Expensepricing     string             `xml:"expensepricing,omitempty"`
	Poaprate           string             `xml:"poaprate,omitempty"`
	Poappricing        string             `xml:"poappricing,omitempty"`
	Status             string             `xml:"status,omitempty"`
	SupDocID           string             `xml:"supdocid,omitempty"`
	Invoicemessage     string             `xml:"invoicemessage,omitempty"`
	Invoicecurrency    string             `xml:"invoicecurrency,omitempty"`
	Projectresources   []Projectresources `xml:"projectresources,omitempty"`
	Billingovermax     string             `xml:"billingovermax,omitempty"`
	Excludeexpenses    bool               `xml:"excludeexpenses,omitempty"`
	CustomFields       *CustomFields      `xml:"customfields,omitempty"`
	// End Sequence
}

type CreateRecurringbill struct {
	// Start Sequence
	VendorID     string   `xml:"vendorid"`
	Datecreated  *DateYMD `xml:"datecreated"`
	RecordID     string   `xml:"recordid,omitempty"`
	Docnumber    string   `xml:"docnumber,omitempty"`
	Description  string   `xml:"description,omitempty"`
	ContractID   string   `xml:"contractid,omitempty"`
	Contractdesc string   `xml:"contractdesc,omitempty"`
	TermName     string   `xml:"termname"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Status              string         `xml:"status,omitempty"`
	SupDocID            string         `xml:"supdocid,omitempty"`
	PaytocontactName    string         `xml:"paytocontactname,omitempty"`
	ReturntocontactName string         `xml:"returntocontactname,omitempty"`
	StartDate           *DateYMD       `xml:"startdate"`
	Ending              *Ending        `xml:"ending,omitempty"`
	Modenew             string         `xml:"modenew,omitempty"`
	Interval            string         `xml:"interval,omitempty"`
	Eom                 string         `xml:"eom,omitempty"`
	Recurbillitems      Recurbillitems `xml:"recurbillitems"`
	// End Sequence
}

type CreateRecurringGLTransaction struct {
	// Start Sequence
	JournalID            string               `xml:"journalid"`
	Datecreated          *DateYMD             `xml:"datecreated"`
	Description          string               `xml:"description"`
	ReferenceNo          string               `xml:"referenceno,omitempty"`
	Sourceentity         string               `xml:"sourceentity,omitempty"`
	SupDocID             string               `xml:"supdocid,omitempty"`
	StartDate            *DateYMD             `xml:"startdate"`
	Ending               *Ending              `xml:"ending,omitempty"`
	Modenew              string               `xml:"modenew,omitempty"`
	Interval             string               `xml:"interval,omitempty"`
	Eom                  string               `xml:"eom,omitempty"`
	Errnotifyemailids    string               `xml:"errnotifyemailids,omitempty"`
	RevstartDate         *DateYMD             `xml:"revstartdate,omitempty"`
	Revending            *Revending           `xml:"revending,omitempty"`
	Revmodenew           string               `xml:"revmodenew,omitempty"`
	Revinterval          string               `xml:"revinterval,omitempty"`
	Reveom               string               `xml:"reveom,omitempty"`
	Reverrnotifyemailids string               `xml:"reverrnotifyemailids,omitempty"`
	Isautoreverse        string               `xml:"isautoreverse,omitempty"`
	Tiereverse           string               `xml:"tiereverse,omitempty"`
	Autorevmodenew       string               `xml:"autorevmodenew,omitempty"`
	Autorevinterval      string               `xml:"autorevinterval,omitempty"`
	Autoreveom           string               `xml:"autoreveom,omitempty"`
	CustomFields         *CustomFields        `xml:"customfields,omitempty"`
	GLTransactionentries GLTransactionentries `xml:"gltransactionentries"`
	// End Sequence
}

type CreateRecurringinvoice struct {
	// Start Sequence
	CustomerID   string   `xml:"customerid"`
	Datecreated  *DateYMD `xml:"datecreated"`
	RecordID     string   `xml:"recordid,omitempty"`
	Docnumber    string   `xml:"docnumber,omitempty"`
	Description  string   `xml:"description,omitempty"`
	ContractID   string   `xml:"contractid,omitempty"`
	Contractdesc string   `xml:"contractdesc,omitempty"`
	TermName     string   `xml:"termname"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Status                 string            `xml:"status,omitempty"`
	SupDocID               string            `xml:"supdocid,omitempty"`
	BilltocontactName      string            `xml:"billtocontactname,omitempty"`
	ShiptocontactName      string            `xml:"shiptocontactname,omitempty"`
	StartDate              *DateYMD          `xml:"startdate"`
	Ending                 *Ending           `xml:"ending,omitempty"`
	Modenew                string            `xml:"modenew,omitempty"`
	Interval               string            `xml:"interval,omitempty"`
	Eom                    string            `xml:"eom,omitempty"`
	Recurinvoiceitems      Recurinvoiceitems `xml:"recurinvoiceitems"`
	Paymethod              string            `xml:"paymethod,omitempty"`
	Payinfull              string            `xml:"payinfull,omitempty"`
	Paymentamount          string            `xml:"paymentamount,omitempty"`
	Customercreditcardkey  string            `xml:"customercreditcardkey,omitempty"`
	Customerbankaccountkey string            `xml:"customerbankaccountkey,omitempty"`
	CreditcardType         string            `xml:"creditcardtype,omitempty"`
	Expirednotify          string            `xml:"expirednotify,omitempty"`
	Expirednotifyemail     string            `xml:"expirednotifyemail,omitempty"`
	// Start Sequence
	AccountType string `xml:"accounttype"`
	// Start Choice
	BankAccountID string `xml:"bankaccountid,omitempty"`
	GLAccountKey  string `xml:"glaccountkey,omitempty"`
	// End Choice
	// End Sequence
	// End Sequence
}

type CreateRecurringstatGLTrans struct {
	// Start Sequence
	JournalID                string                   `xml:"journalid"`
	Datecreated              *DateYMD                 `xml:"datecreated"`
	Description              string                   `xml:"description"`
	ReferenceNo              string                   `xml:"referenceno,omitempty"`
	StartDate                *DateYMD                 `xml:"startdate"`
	Ending                   *Ending                  `xml:"ending,omitempty"`
	Modenew                  string                   `xml:"modenew,omitempty"`
	Interval                 string                   `xml:"interval,omitempty"`
	Eom                      string                   `xml:"eom,omitempty"`
	Errnotifyemailids        string                   `xml:"errnotifyemailids,omitempty"`
	RevstartDate             *DateYMD                 `xml:"revstartdate,omitempty"`
	Revending                *Revending               `xml:"revending,omitempty"`
	Revmodenew               string                   `xml:"revmodenew,omitempty"`
	Revinterval              string                   `xml:"revinterval,omitempty"`
	Reveom                   string                   `xml:"reveom,omitempty"`
	Reverrnotifyemailids     string                   `xml:"reverrnotifyemailids,omitempty"`
	Isautoreverse            string                   `xml:"isautoreverse,omitempty"`
	Tiereverse               string                   `xml:"tiereverse,omitempty"`
	Autorevmodenew           string                   `xml:"autorevmodenew,omitempty"`
	Autorevinterval          string                   `xml:"autorevinterval,omitempty"`
	Autoreveom               string                   `xml:"autoreveom,omitempty"`
	CustomFields             *CustomFields            `xml:"customfields,omitempty"`
	StatGLTransactionEntries StatGLTransactionEntries `xml:"statgltransactionentries"`
	// End Sequence
}

type CreateRecursotransaction struct {
	// Start Sequence
	TransactionType        string            `xml:"transactiontype"`
	CustomerID             string            `xml:"customerid"`
	ReferenceNo            string            `xml:"referenceno,omitempty"`
	TermName               string            `xml:"termname,omitempty"`
	Message                string            `xml:"message,omitempty"`
	ContractID             string            `xml:"contractid,omitempty"`
	Contractdesc           string            `xml:"contractdesc,omitempty"`
	Shippingmethod         string            `xml:"shippingmethod,omitempty"`
	Shipto                 *Shipto           `xml:"shipto,omitempty"`
	Billto                 *BillTo           `xml:"billto,omitempty"`
	ExternalID             string            `xml:"externalid,omitempty"`
	Basecurr               string            `xml:"basecurr,omitempty"`
	Currency               string            `xml:"currency,omitempty"`
	ExchrateType           string            `xml:"exchratetype,omitempty"`
	CustomFields           *CustomFields     `xml:"customfields,omitempty"`
	Recursotransitems      Recursotransitems `xml:"recursotransitems"`
	Subtotals              *Subtotals        `xml:"subtotals,omitempty"`
	Paymethod              string            `xml:"paymethod,omitempty"`
	Payinfull              string            `xml:"payinfull,omitempty"`
	Paymentamount          string            `xml:"paymentamount,omitempty"`
	CreditcardType         string            `xml:"creditcardtype,omitempty"`
	Customercreditcardkey  string            `xml:"customercreditcardkey,omitempty"`
	Customerbankaccountkey string            `xml:"customerbankaccountkey,omitempty"`
	AccountType            string            `xml:"accounttype,omitempty"`
	BankAccountID          string            `xml:"bankaccountid,omitempty"`
	GLAccountkey           string            `xml:"glaccountkey,omitempty"`
	StartDate              *DateYMD          `xml:"startdate"`
	Ending                 *Ending           `xml:"ending,omitempty"`
	Modenew                string            `xml:"modenew,omitempty"`
	Interval               string            `xml:"interval,omitempty"`
	Eom                    string            `xml:"eom,omitempty"`
	Status                 string            `xml:"status,omitempty"`
	Docstatus              string            `xml:"docstatus,omitempty"`
	// End Sequence
}

type CreateReimbursementrequest struct {
	// Start Sequence
	BankAccountID         string                `xml:"bankaccountid"`
	EmployeeID            string                `xml:"employeeid"`
	Memo                  string                `xml:"memo,omitempty"`
	Paymentmethod         string                `xml:"paymentmethod"`
	PaymentDate           *DateYMD              `xml:"paymentdate"`
	Paymentoption         string                `xml:"paymentoption,omitempty"`
	Eppaymentrequestitems Eppaymentrequestitems `xml:"eppaymentrequestitems"`
	Documentnumber        string                `xml:"documentnumber,omitempty"`
	Paymentdescription    string                `xml:"paymentdescription,omitempty"`
	Paymentcontact        string                `xml:"paymentcontact,omitempty"`
	// End Sequence
}

type CreateRevrecscheduleentry struct {
	// Start Sequence
	RecordNo    string      `xml:"recordno"`
	Memo        string      `xml:"memo,omitempty"`
	Revrecentry Revrecentry `xml:"revrecentry"`
	// End Sequence
}

type CreateSavingsaccount struct {
	// Start Sequence
	BankAccountID string         `xml:"bankaccountid"`
	BankAccountNo string         `xml:"bankaccountno,omitempty"`
	LocationID    string         `xml:"locationid"`
	BankName      string         `xml:"bankname"`
	RoutingNo     string         `xml:"routingno,omitempty"`
	BranchID      string         `xml:"branchid,omitempty"`
	Phone         string         `xml:"phone,omitempty"`
	Currency      string         `xml:"currency,omitempty"`
	Mailaddress   *Mailaddress   `xml:"mailaddress,omitempty"`
	Status        string         `xml:"status,omitempty"`
	Disableiet    string         `xml:"disableiet,omitempty"`
	FinancialData *FinancialData `xml:"financialdata,omitempty"`
	GLAccountNo   string         `xml:"glaccountno,omitempty"`
	// Start Choice
	ServicechargeGLAccount    string `xml:"servicechargeglaccount,omitempty"`
	Servicechargeaccountlabel string `xml:"servicechargeaccountlabel,omitempty"`
	// End Choice
	// Start Choice
	InterestearnedGLAccount    string `xml:"interestearnedglaccount,omitempty"`
	Interestearnedaccountlabel string `xml:"interestearnedaccountlabel,omitempty"`
	// End Choice
	DepartmentID string      `xml:"departmentid,omitempty"`
	Visibility   *Visibility `xml:"visibility,omitempty"`
	// End Sequence
}

type CreateSopricelist struct {
	// Start Sequence
	Name     string   `xml:"name"`
	Datefrom *DateYMD `xml:"datefrom,omitempty"`
	Dateto   *DateYMD `xml:"dateto,omitempty"`
	Status   string   `xml:"status,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateSotransaction struct {
	// Start Sequence
	TransactionType string   `xml:"transactiontype"`
	Datecreated     *DateYMD `xml:"datecreated"`
	Dateposted      *DateYMD `xml:"dateposted,omitempty"`
	Createdfrom     string   `xml:"createdfrom,omitempty"`
	CustomerID      string   `xml:"customerid"`
	DocumentNo      string   `xml:"documentno,omitempty"`
	OrigdocDate     *DateYMD `xml:"origdocdate,omitempty"`
	ReferenceNo     string   `xml:"referenceno,omitempty"`
	TermName        string   `xml:"termname,omitempty"`
	Datedue         *DateYMD `xml:"datedue,omitempty"`
	Message         string   `xml:"message,omitempty"`
	Shippingmethod  string   `xml:"shippingmethod,omitempty"`
	Shipto          *Shipto  `xml:"shipto,omitempty"`
	Billto          *BillTo  `xml:"billto,omitempty"`
	SupDocID        string   `xml:"supdocid,omitempty"`
	ExternalID      string   `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Vsoepricelist string        `xml:"vsoepricelist,omitempty"`
	CustomFields  *CustomFields `xml:"customfields,omitempty"`
	State         string        `xml:"state,omitempty"`
	ProjectID     string        `xml:"projectid,omitempty"`
	Sotransitems  Sotransitems  `xml:"sotransitems"`
	Subtotals     *Subtotals    `xml:"subtotals,omitempty"`
	// End Sequence
}

type CreateStatGLAccount struct {
	// Start Sequence
	GLAccountNo      string        `xml:"glaccountno"`
	Title            string        `xml:"title"`
	Requiredept      string        `xml:"requiredept,omitempty"`
	Requireloc       string        `xml:"requireloc,omitempty"`
	Requireproject   string        `xml:"requireproject,omitempty"`
	Requirecustomer  string        `xml:"requirecustomer,omitempty"`
	Requirevendor    string        `xml:"requirevendor,omitempty"`
	Requireitem      string        `xml:"requireitem,omitempty"`
	Requireemployee  string        `xml:"requireemployee,omitempty"`
	Requireclass     string        `xml:"requireclass,omitempty"`
	Requirecontract  string        `xml:"requirecontract,omitempty"`
	Requirewarehouse string        `xml:"requirewarehouse,omitempty"`
	CustomFields     *CustomFields `xml:"customfields,omitempty"`
	Category         string        `xml:"category,omitempty"`
	Status           string        `xml:"status,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateStatGLTransaction struct {
	// Start Sequence
	JournalID                string                   `xml:"journalid"`
	Datecreated              *DateYMD                 `xml:"datecreated"`
	ReverseDate              *DateYMD                 `xml:"reversedate,omitempty"`
	Description              string                   `xml:"description"`
	StatGLTransactionEntries StatGLTransactionEntries `xml:"statgltransactionentries"`
	// End Sequence
}

type CreateStatjournal struct {
	// Start Sequence
	Symbol  string `xml:"symbol"`
	Title   string `xml:"title"`
	Status  string `xml:"status,omitempty"`
	Bookkey string `xml:"bookkey,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateStkittransaction struct {
	// Start Sequence
	TransactionType string           `xml:"transactiontype"`
	Datecreated     *DateYMD         `xml:"datecreated"`
	Createdfrom     string           `xml:"createdfrom,omitempty"`
	DocumentNo      string           `xml:"documentno,omitempty"`
	ReferenceNo     string           `xml:"referenceno,omitempty"`
	Message         string           `xml:"message,omitempty"`
	ExternalID      string           `xml:"externalid,omitempty"`
	CustomFields    *CustomFields    `xml:"customfields,omitempty"`
	Stkittransitems *Stkittransitems `xml:"stkittransitems,omitempty"`
	// End Sequence
}

type CreateTask struct {
	// Start Sequence
	TaskName           string         `xml:"taskname"`
	ProjectID          string         `xml:"projectid"`
	PbeginDate         *DateYMD       `xml:"pbegindate,omitempty"`
	PendDate           *DateYMD       `xml:"penddate,omitempty"`
	ItemID             string         `xml:"itemid,omitempty"`
	Billable           string         `xml:"billable,omitempty"`
	Taskdescription    string         `xml:"taskdescription,omitempty"`
	Ismilestone        string         `xml:"ismilestone,omitempty"`
	Utilized           string         `xml:"utilized,omitempty"`
	Priority           string         `xml:"priority,omitempty"`
	TaskNo             string         `xml:"taskno,omitempty"`
	Taskstatus         string         `xml:"taskstatus,omitempty"`
	Parentkey          string         `xml:"parentkey,omitempty"`
	ParenttaskName     string         `xml:"parenttaskname,omitempty"`
	Budgetqty          string         `xml:"budgetqty,omitempty"`
	Estqty             string         `xml:"estqty,omitempty"`
	TimeType           string         `xml:"timetype,omitempty"`
	Obspercentcomplete string         `xml:"obspercentcomplete,omitempty"`
	Taskresources      *Taskresources `xml:"taskresources,omitempty"`
	CustomFields       *CustomFields  `xml:"customfields,omitempty"`
	ClassID            string         `xml:"classid,omitempty"`
	SupDocID           string         `xml:"supdocid,omitempty"`
	Dependentonkey     string         `xml:"dependentonkey,omitempty"`
	DependentonName    string         `xml:"dependentonname,omitempty"`
	// End Sequence
}

type CreateTaxdetail struct {
	// Start Sequence
	DetailID     string `xml:"detailid"`
	Description  string `xml:"description,omitempty"`
	TaxType      string `xml:"taxtype"`
	Value        string `xml:"value,omitempty"`
	Mintaxable   string `xml:"mintaxable,omitempty"`
	Maxtaxable   string `xml:"maxtaxable,omitempty"`
	Include      string `xml:"include,omitempty"`
	Mintax       string `xml:"mintax,omitempty"`
	Maxtax       string `xml:"maxtax,omitempty"`
	GLAccountNo  string `xml:"glaccountno"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	Taxauthority string `xml:"taxauthority,omitempty"`
	Status       string `xml:"status,omitempty"`
	// End Sequence
}

type CreateTaxschedule struct {
	// Start Sequence
	ScheduleID  string `xml:"scheduleid"`
	Description string `xml:"description,omitempty"`
	TaxType     string `xml:"taxtype"`
	Status      string `xml:"status,omitempty"`
	// End Sequence
}

type CreateTaxscheduledetail struct {
	// Start Sequence
	ScheduleID string `xml:"scheduleid"`
	DetailID   string `xml:"detailid"`
	// End Sequence
}

type CreateTaxschedulemap struct {
	// Start Sequence
	DocumentType string `xml:"documenttype,omitempty"`
	// Start Choice
	ItemTaxGroup string `xml:"itemtaxgroup,omitempty"`
	AccountGroup string `xml:"accountgroup,omitempty"`
	// End Choice
	TaxGroup   string `xml:"taxgroup"`
	ScheduleID string `xml:"scheduleid"`
	Module     string `xml:"module,omitempty"`
	// End Sequence
}

type CreateTerritory struct {
	// Start Sequence
	TerritoryID  string        `xml:"territoryid"`
	Name         string        `xml:"name"`
	ParentID     string        `xml:"parentid,omitempty"`
	ManagerID    string        `xml:"managerid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	ExternalID   string        `xml:"externalid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateTimesheet struct {
	// Start Sequence
	EmployeeID           string           `xml:"employeeid"`
	BeginDate            *DateYMD         `xml:"begindate"`
	GLPostDate           *DateYMD         `xml:"glpostdate,omitempty"`
	Timesheetdescription string           `xml:"timesheetdescription,omitempty"`
	State                string           `xml:"state,omitempty"`
	Timesheetitems       []Timesheetitems `xml:"timesheetitems"`
	// End Sequence
}

type CreateTimeType struct {
	// Start Sequence
	Name            string        `xml:"name"`
	Status          string        `xml:"status,omitempty"`
	AccountNo       string        `xml:"accountno,omitempty"`
	OffsetAccountNo string        `xml:"offsetaccountno,omitempty"`
	EarningtypeName string        `xml:"earningtypename,omitempty"`
	CustomFields    *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type CreateVendor struct {
	// Start Sequence
	VendorID              string         `xml:"vendorid"`
	Name                  string         `xml:"name"`
	ParentID              string         `xml:"parentid,omitempty"`
	TermName              string         `xml:"termname,omitempty"`
	GLAccountNo           string         `xml:"glaccountno,omitempty"`
	AccountLabel          string         `xml:"accountlabel,omitempty"`
	VendType              string         `xml:"vendtype,omitempty"`
	TaxID                 string         `xml:"taxid,omitempty"`
	Creditlimit           string         `xml:"creditlimit,omitempty"`
	Paymethod             string         `xml:"paymethod,omitempty"`
	Outsourcecheck        string         `xml:"outsourcecheck,omitempty"`
	Outsourceach          string         `xml:"outsourceach,omitempty"`
	BillingType           string         `xml:"billingtype,omitempty"`
	VendorAccountNo       string         `xml:"vendoraccountno,omitempty"`
	Displocacctnocheck    string         `xml:"displocacctnocheck,omitempty"`
	Onhold                string         `xml:"onhold,omitempty"`
	Donotcutcheck         string         `xml:"donotcutcheck,omitempty"`
	Comments              string         `xml:"comments,omitempty"`
	Status                string         `xml:"status,omitempty"`
	Currency              string         `xml:"currency,omitempty"`
	Onetime               string         `xml:"onetime,omitempty"`
	ExternalID            string         `xml:"externalid,omitempty"`
	Primary               *Primary       `xml:"primary,omitempty"`
	Returnto              *Returnto      `xml:"returnto,omitempty"`
	Payto                 *Payto         `xml:"payto,omitempty"`
	Contactinfo           *ContactInfo   `xml:"contactinfo,omitempty"`
	Contactto1099         *Contactto1099 `xml:"contactto1099,omitempty"`
	Contactlist           *ContactList   `xml:"contactlist,omitempty"`
	Name1099              string         `xml:"name1099,omitempty"`
	Form1099Type          string         `xml:"form1099type,omitempty"`
	Form1099box           string         `xml:"form1099box,omitempty"`
	CustomFields          *CustomFields  `xml:"customfields,omitempty"`
	Paymentnotify         string         `xml:"paymentnotify,omitempty"`
	ACHEnabled            string         `xml:"achenabled,omitempty"`
	Wireenabled           string         `xml:"wireenabled,omitempty"`
	Checkenabled          string         `xml:"checkenabled,omitempty"`
	ACHBankroutingnumber  string         `xml:"achbankroutingnumber,omitempty"`
	ACHAccountnumber      string         `xml:"achaccountnumber,omitempty"`
	ACHAccountType        string         `xml:"achaccounttype,omitempty"`
	ACHRemittanceType     string         `xml:"achremittancetype,omitempty"`
	WirebankName          string         `xml:"wirebankname,omitempty"`
	Wirebankroutingnumber string         `xml:"wirebankroutingnumber,omitempty"`
	Wireaccountnumber     string         `xml:"wireaccountnumber,omitempty"`
	WireaccountType       string         `xml:"wireaccounttype,omitempty"`
	PmplusremittanceType  string         `xml:"pmplusremittancetype,omitempty"`
	Pmplusemail           string         `xml:"pmplusemail,omitempty"`
	Pmplusfax             string         `xml:"pmplusfax,omitempty"`
	Displaytermdiscount   string         `xml:"displaytermdiscount,omitempty"`
	Visibility            *Visibility    `xml:"visibility,omitempty"`
	SupDocID              string         `xml:"supdocid,omitempty"`
	Mergepaymentreq       string         `xml:"mergepaymentreq,omitempty"`
	OffsetglAccountNo     string         `xml:"offsetglaccountno,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateVendorentityAccountNo struct {
	// Start Sequence
	VendorID   string `xml:"vendorid"`
	AccountNo  string `xml:"accountno"`
	LocationID string `xml:"locationid"`
	// End Sequence
}

type CreateVsoeitempricelist struct {
	// Start Sequence
	PricelistID string `xml:"pricelistid"`
	ItemID      string `xml:"itemid"`
	Currency    string `xml:"currency,omitempty"`
	Valuebase   string `xml:"valuebase"`
	// Start Sequence
	Percentbase   Percentbase `xml:"percentbase"`
	Percentof     string      `xml:"percentof"`
	Usepricebands string      `xml:"usepricebands"`
	PricebandType string      `xml:"pricebandtype"`
	Pricebandrule string      `xml:"pricebandrule"`
	// End Sequence
	Status       string       `xml:"status,omitempty"`
	Priceentries Priceentries `xml:"priceentries"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type CreateVsoepricelist struct {
	// Start Sequence
	Name        string `xml:"name"`
	Description string `xml:"description,omitempty"`
	Status      string `xml:"status,omitempty"`
	Isdefault   string `xml:"isdefault,omitempty"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type Creditcard struct {
	// Start Sequence
	CreditcardID string `xml:"creditcardid"`
	// End Sequence
}

type Csnentity struct {
	// Start Sequence
	EntityID string `xml:"entityid"`
	Bsrate   string `xml:"bsrate,omitempty"`
	Warate   string `xml:"warate,omitempty"`
	// End Sequence
}

type Ctanetassetacct struct {
	// Start Sequence
	AccountNo string `xml:"accountno"`
	// End Sequence
}

type Ctanetincomeacct struct {
	// Start Sequence
	AccountNo string `xml:"accountno"`
	// End Sequence
}

type CustomField struct {
	// Start Sequence
	CustomFieldName  string `xml:"customfieldname"`
	CustomFieldvalue string `xml:"customfieldvalue"`
	// End Sequence
}

type CustomFields struct {
	// Start Sequence
	CustomField []CustomField `xml:"customfield,omitempty"`
	// End Sequence
}

type DeleteACHBankconfiguration struct {
	ACHBankID string `xml:"achbankid,attr"`
}

type DeleteAllocation struct {
	Key string `xml:"key,attr"`
}

type DeleteAPAccountLabel struct {
	AccountLabel string `xml:"accountlabel,attr"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteAPAdjustment struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteAPTerm struct {
	Name string `xml:"name,attr"`
}

type DeleteARAccountLabel struct {
	AccountLabel string `xml:"accountlabel,attr"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteARAdjustment struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteArpayment struct {
	Key string `xml:"key,attr"`
}

type DeleteARTerm struct {
	Name string `xml:"name,attr"`
}

type DeleteBill struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteCheckingaccount struct {
	BankAccountID string `xml:"bankaccountid,attr"`
	Externalkey   bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteClass struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteContact struct {
	ContactName string `xml:"contactname,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteContacttaxgroup struct {
	Name string `xml:"name,attr"`
}

type DeleteCustomer struct {
	CustomerID  string `xml:"customerid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteCustomerachinfo struct {
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteCustomerbankaccount struct {
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteCustomerchargecard struct {
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteDepartment struct {
	DepartmentID string `xml:"departmentid,attr"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteEarningType struct {
	Key string `xml:"key,attr"`
}

type DeleteEmployee struct {
	EmployeeID  string `xml:"employeeid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteEmployeerate struct {
	Key string `xml:"key,attr"`
}

type DeleteExpenseadjustmentreport struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteExpensepaymentType struct {
	Name string `xml:"name,attr"`
}

type DeleteExpensereport struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteExpenseType struct {
	ExpenseType string `xml:"expensetype,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteGLAccount struct {
	GLAccountNo string `xml:"glaccountno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteGLBookacctgroups struct {
	// Start Sequence
	Bookkey      string `xml:"bookkey"`
	Acctgroupkey string `xml:"acctgroupkey"`
	// End Sequence
	Externalkey bool `xml:"externalkey,attr,omitempty"`
}

type DeleteGLBookacctratetypes struct {
	// Start Sequence
	Bookkey     string `xml:"bookkey"`
	GLAccountNo string `xml:"glaccountno"`
	// End Sequence
	Ignoreduplicates bool `xml:"ignoreduplicates,attr,omitempty"`
}

type DeleteGLBooklocations struct {
	// Start Sequence
	Bookkey    string `xml:"bookkey"`
	LocationID string `xml:"locationid"`
	// End Sequence
	Externalkey bool `xml:"externalkey,attr,omitempty"`
}

type DeleteGLTransaction struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteIctransaction struct {
	Key      string `xml:"key,attr"`
	External bool   `xml:"external,attr,omitempty"`
}

type DeleteInvoice struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteInvpricelistentry struct {
	RecordNo string `xml:"recordno,attr"`
}

type DeleteItem struct {
	ItemID string `xml:"itemid,attr"`
}

type DeleteItemtaxgroup struct {
	Name string `xml:"name,attr"`
}

type DeleteJournal struct {
	// Start Sequence
	Title  string `xml:"title,omitempty"`
	Status string `xml:"status,omitempty"`
	// End Sequence
	Symbol      string `xml:"symbol,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteLocation struct {
	LocationID  string `xml:"locationid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeletePaymentrequest struct {
	Key string `xml:"key,attr"`
}

type DeletePopricelist struct {
	Name string `xml:"name,attr"`
}

type DeletePotransaction struct {
	Key      string `xml:"key,attr"`
	External bool   `xml:"external,attr,omitempty"`
}

type DeleteProject struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteRecurringbill struct {
	Key string `xml:"key,attr"`
}

type DeleteRecurringgltransaction struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteRecurringinvoice struct {
	Key string `xml:"key,attr"`
}

type DeleteRecurringstatgltrans struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteRecursotransaction struct {
	Key string `xml:"key,attr"`
}

type DeleteSavingsaccount struct {
	BankAccountID string `xml:"bankaccountid,attr"`
	Externalkey   bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteSopricelist struct {
	Name string `xml:"name,attr"`
}

type DeleteSotransaction struct {
	Key      string `xml:"key,attr"`
	External bool   `xml:"external,attr,omitempty"`
}

type DeleteStatglaccount struct {
	GLAccountNo string `xml:"glaccountno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteStatjournal struct {
	// Start Sequence
	Title  string `xml:"title,omitempty"`
	Status string `xml:"status,omitempty"`
	// End Sequence
	Symbol      string `xml:"symbol,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteTask struct {
	Key string `xml:"key,attr"`
}

type DeleteTaxdetail struct {
	DetailID string `xml:"detailid,attr"`
}

type DeleteTaxschedule struct {
	ScheduleID string `xml:"scheduleid,attr"`
}

type DeleteTaxscheduledetail struct {
	RecordNo string `xml:"recordno,attr"`
}

type DeleteTaxschedulemap struct {
	RecordNo string `xml:"recordno,attr"`
}

type DeleteTerritory struct {
	TerritoryID string `xml:"territoryid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteTimesheet struct {
	Key string `xml:"key,attr"`
}

type DeleteTimeType struct {
	Key string `xml:"key,attr"`
}

type DeleteVendor struct {
	VendorID    string `xml:"vendorid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type DeleteVsoeitempricelist struct {
	Key string `xml:"key,attr"`
}

type DeleteVsoepricelist struct {
	Name string `xml:"name,attr"`
}

type Deliveryoptions struct {
	// Start Sequence
	Deliveryoption []string `xml:"deliveryoption"`
	// End Sequence
}

type Department struct {
	// Start Sequence
	DepartmentID string `xml:"departmentid"`
	// End Sequence
}

type Describe struct {
	// Start Sequence
	Doctypes *Doctypes `xml:"doctypes,omitempty"`
	// End Sequence
	Object      string `xml:"object,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type Discount struct {
	// Start Sequence
	Discday       string `xml:"discday,omitempty"`
	Discfrom      string `xml:"discfrom,omitempty"`
	Discamount    string `xml:"discamount,omitempty"`
	Discpercamn   string `xml:"discpercamn,omitempty"`
	Discgracedays string `xml:"discgracedays,omitempty"`
	// End Sequence
}

type Doctypes struct {
	// Start Sequence
	DocType []string `xml:"doctype"`
	// End Sequence
}

type Due struct {
	// Start Sequence
	Dueday  string `xml:"dueday,omitempty"`
	Duefrom string `xml:"duefrom,omitempty"`
	// End Sequence
}

type Eft struct {
	// Start Sequence
	DocumentNo string `xml:"documentno"`
	// End Sequence
}

type Ending struct {
	// Start Choice
	Occur   string   `xml:"occur,omitempty"`
	EndDate *DateYMD `xml:"enddate,omitempty"`
	// End Choice
}

type Entities struct {
	// Start Sequence
	Csnentity []Csnentity `xml:"csnentity"`
	// End Sequence
}

type Entry struct {
	// Start Sequence
	Value        string        `xml:"value"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Eppaymentrequestitem struct {
	// Start Sequence
	Key           string `xml:"key"`
	Paymentamount string `xml:"paymentamount"`
	Credittoapply string `xml:"credittoapply,omitempty"`
	// End Sequence
	Externalkey bool `xml:"externalkey,attr,omitempty"`
}

type Eppaymentrequestitems struct {
	// Start Sequence
	Eppaymentrequestitem []Eppaymentrequestitem `xml:"eppaymentrequestitem"`
	// End Sequence
}

type Expense struct {
	// Start Sequence
	// Start Choice
	ExpenseType string `xml:"expensetype,omitempty"`
	GLAccountNo string `xml:"glaccountno,omitempty"`
	// End Choice
	Amount       string        `xml:"amount,omitempty"`
	Currency     string        `xml:"currency,omitempty"`
	TrxAmount    string        `xml:"trx_amount,omitempty"`
	ExchrateDate *DateYMD      `xml:"exchratedate,omitempty"`
	ExchrateType string        `xml:"exchratetype,omitempty"`
	Exchrate     string        `xml:"exchrate,omitempty"`
	ExpenseDate  *DateYMD      `xml:"expensedate,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	Form1099     string        `xml:"form1099,omitempty"`
	Form1099Type string        `xml:"form1099type,omitempty"`
	Form1099box  string        `xml:"form1099box,omitempty"`
	Paidfor      string        `xml:"paidfor,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	ExppmtType   string        `xml:"exppmttype,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Rate         string        `xml:"rate,omitempty"`
	// End Sequence
}

type Expenseadjustment struct {
	// Start Sequence
	// Start Choice
	ExpenseType string `xml:"expensetype,omitempty"`
	GLAccountNo string `xml:"glaccountno,omitempty"`
	// End Choice
	Amount       string        `xml:"amount"`
	Currency     string        `xml:"currency,omitempty"`
	TrxAmount    string        `xml:"trx_amount,omitempty"`
	ExchrateDate *DateYMD      `xml:"exchratedate,omitempty"`
	ExchrateType string        `xml:"exchratetype,omitempty"`
	Exchrate     string        `xml:"exchrate,omitempty"`
	ExpenseDate  *DateYMD      `xml:"expensedate,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	ExppmtType   string        `xml:"exppmttype,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Rate         string        `xml:"rate,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Expenseadjustments struct {
	// Start Sequence
	Expenseadjustment []Expenseadjustment `xml:"expenseadjustment"`
	// End Sequence
}

type Expenses struct {
	// Start Sequence
	Expense []Expense `xml:"expense"`
	// End Sequence
}

type ExpiryDate struct {
	// Start Sequence
	ExpMonth string `xml:"exp_month"`
	ExpYear  string `xml:"exp_year"`
	// End Sequence
}

type FileConfiguration struct {
	Delimiter      string `xml:"delimiter,omitempty"`
	Enclosure      string `xml:"enclosure,omitempty"`
	IncludeHeaders bool   `xml:"includeHeaders,omitempty"`
	FileFormat     string `xml:"fileFormat,omitempty"`
	SplitSize      string `xml:"splitSize,omitempty"`
	Compress       bool   `xml:"compress,omitempty"`
}

type FinancialData struct {
	// Start Sequence
	Reconmode string `xml:"reconmode"`
	APJournal string `xml:"apjournal,omitempty"`
	ARJournal string `xml:"arjournal,omitempty"`
	// End Sequence
}

type Fulfillmentstatus struct {
	// Start Choice
	// Start Sequence
	Deliverystatus string   `xml:"deliverystatus,omitempty"`
	DeliveryDate   *DateYMD `xml:"deliverydate,omitempty"`
	Deferralstatus string   `xml:"deferralstatus,omitempty"`
	// End Sequence
	Kitstatus *Kitstatus `xml:"kitstatus,omitempty"`
	// End Choice
}

type GenerateProjectinvoices struct {
	Invoicetemplate   string `xml:"invoicetemplate"`
	InvoiceDate       string `xml:"invoicedate"`
	GLPostDate        string `xml:"glpostdate,omitempty"`
	Sortbyproject     bool   `xml:"sortbyproject,omitempty"`
	Invoiceby         string `xml:"invoiceby"`
	CustomerID        string `xml:"customerid,omitempty"`
	ProjectID         string `xml:"projectid,omitempty"`
	PricelistID       string `xml:"pricelistid,omitempty"`
	Saveas            string `xml:"saveas"`
	Invcurrencysource string `xml:"invcurrencysource,omitempty"`
	Invoicecurrency   string `xml:"invoicecurrency,omitempty"`
	ExchrateDate      string `xml:"exchratedate,omitempty"`
	ExchrateType      string `xml:"exchratetype,omitempty"`
	Exchrate          string `xml:"exchrate,omitempty"`
	CustType          string `xml:"custtype,omitempty"`
	ProjectType       string `xml:"projecttype,omitempty"`
	ProjectmanagerID  string `xml:"projectmanagerid,omitempty"`
	FromDate          string `xml:"fromdate,omitempty"`
	ToDate            string `xml:"todate,omitempty"`
	FromitemID        string `xml:"fromitemid,omitempty"`
	ToitemID          string `xml:"toitemid,omitempty"`
	EmployeeID        string `xml:"employeeid,omitempty"`
	LocationID        string `xml:"locationid,omitempty"`
	DepartmentID      string `xml:"departmentid,omitempty"`
}

type GetAuditTrail struct {
	Object    string `xml:"object"`
	ObjectKey string `xml:"objectKey"`
}

type GetDdsDdl struct {
	Object string `xml:"object"`
}

type GetDimensionAutofillData struct {
	// Start Sequence
	Dimension string `xml:"dimension"`
	Value     string `xml:"value"`
	// End Sequence
}

type GetDimensionRestrictedData struct {
	// Start Sequence
	DimensionValue []string `xml:"DimensionValue"`
	// Start Sequence
	Dimension string `xml:"dimension"`
	Value     string `xml:"value"`
	// End Sequence
	// End Sequence
}

type GetUserPermissions struct {
	UserID string `xml:"userId"`
}

type GetAccountbalances struct {
	// Start Sequence
	// Start Choice
	ReportingperiodName string `xml:"reportingperiodname,omitempty"`
	// Start Sequence
	StartDate *DateYMD `xml:"startdate,omitempty"`
	EndDate   *DateYMD `xml:"enddate,omitempty"`
	// End Sequence
	// End Choice
	// Start Choice
	GLAccountNo      string `xml:"glaccountno,omitempty"`
	AccountGroupName string `xml:"accountgroupname,omitempty"`
	// Start Sequence
	StartAccountNo string `xml:"startaccountno,omitempty"`
	EndAccountNo   string `xml:"endaccountno,omitempty"`
	// End Sequence
	// End Choice
	LocationID       string `xml:"locationid,omitempty"`
	DepartmentID     string `xml:"departmentid,omitempty"`
	Showzerobalances string `xml:"showzerobalances,omitempty"`
	// End Sequence
}

type GetAccountGroupdetails struct {
	// Start Sequence
	AccountGroupName string `xml:"accountgroupname"`
	// End Sequence
}

type GetAPAdjustment struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetARAdjustment struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetARAging struct {
	// Start Sequence
	Agingperiods         string   `xml:"agingperiods,omitempty"`
	CustomerID           string   `xml:"customerid,omitempty"`
	InvoiceNo            string   `xml:"invoiceno,omitempty"`
	LocationID           string   `xml:"locationid,omitempty"`
	DepartmentID         string   `xml:"departmentid,omitempty"`
	AsofDate             *DateYMD `xml:"asofdate,omitempty"`
	UsedueDate           string   `xml:"useduedate,omitempty"`
	Showdetails          string   `xml:"showdetails,omitempty"`
	DocumentType         string   `xml:"documenttype,omitempty"`
	UseglpostDate        string   `xml:"useglpostdate,omitempty"`
	Showzerowithactivity string   `xml:"showzerowithactivity,omitempty"`
	// End Sequence
}

type GetBill struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetCompanyprefs struct {
	Application string `xml:"application,attr"`
}

type GetExpenseadjustmentreport struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetExpensereport struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetIcitemtotals struct {
	// Start Sequence
	ItemID      string `xml:"itemid,omitempty"`
	WarehouseID string `xml:"warehouseid,omitempty"`
	// End Sequence
}

type GetInvoice struct {
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type GetMyclients struct {
	// Start Sequence
	CompanyType string `xml:"companytype,omitempty"`
	// End Sequence
}

type GetSalestotals struct {
	// Start Sequence
	CustomerID string `xml:"customerid,omitempty"`
	// Start Choice
	ReportingperiodName string `xml:"reportingperiodname,omitempty"`
	// Start Sequence
	StartDate *DateYMD `xml:"startdate,omitempty"`
	EndDate   *DateYMD `xml:"enddate,omitempty"`
	// End Sequence
	// End Choice
	// End Sequence
}

type GetTrialbalance struct {
	// Start Sequence
	// Start Choice
	ReportingperiodName string `xml:"reportingperiodname,omitempty"`
	// Start Sequence
	StartDate *DateYMD `xml:"startdate,omitempty"`
	EndDate   *DateYMD `xml:"enddate,omitempty"`
	// End Sequence
	// End Choice
	Showzerobalances string `xml:"showzerobalances,omitempty"`
	Showdeptdetail   string `xml:"showdeptdetail,omitempty"`
	Showlocdetail    string `xml:"showlocdetail,omitempty"`
	// End Sequence
}

type GLentry struct {
	// Start Sequence
	TrType       string        `xml:"trtype"`
	Amount       string        `xml:"amount"`
	GLAccountNo  string        `xml:"glaccountno"`
	Document     string        `xml:"document,omitempty"`
	Datecreated  *DateYMD      `xml:"datecreated,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ReconDate    *DateYMD      `xml:"recon_date,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	// End Sequence
}

type GLTransaction struct {
	// Start Sequence
	JournalID            string               `xml:"journalid"`
	Datecreated          *DateYMD             `xml:"datecreated"`
	Description          string               `xml:"description"`
	Sourceentity         string               `xml:"sourceentity,omitempty"`
	GLTransactionentries GLTransactionentries `xml:"gltransactionentries"`
	// End Sequence
}

type GLTransactionentries struct {
	// Start Sequence
	GLentry []GLentry `xml:"glentry"`
	// End Sequence
}

type HoldRevrecschedule struct {
	// Start Sequence
	RecordNo string `xml:"recordno"`
	Category string `xml:"category,omitempty"`
	Memo     string `xml:"memo,omitempty"`
	// End Sequence
}

type ICTransItem struct {
	// Start Sequence
	ItemID       string        `xml:"itemid"`
	Itemdesc     string        `xml:"itemdesc,omitempty"`
	WarehouseID  string        `xml:"warehouseid"`
	Quantity     string        `xml:"quantity"`
	Unit         string        `xml:"unit,omitempty"`
	Cost         string        `xml:"cost,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	Itemdetails  *Itemdetails  `xml:"itemdetails,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	// End Sequence
}

type ICTransItems struct {
	// Start Sequence
	ICTransItem []ICTransItem `xml:"ictransitem"`
	// End Sequence
}

type InitSession struct {
	// Start Sequence
	Activity string `xml:"activity,omitempty"`
	// End Sequence
}

type Inspect struct {
	// Start Choice
	Object string `xml:"object,omitempty"`
	Name   string `xml:"name,omitempty"`
	// End Choice
	Detail string `xml:"detail,attr,omitempty"`
}

type InstallApp struct {
	// Start Sequence
	Any string `xml:",innerxml"`
	// End Sequence
}

type Invoiceitems struct {
	// Start Sequence
	LineItem []LineItem `xml:"lineitem"`
	// End Sequence
}

type Itaxgroup struct {
	// Start Sequence
	Key  string `xml:"key,omitempty"`
	Name string `xml:"name,omitempty"`
	// End Sequence
}

type Itemdetail struct {
	// Start Sequence
	Quantity string `xml:"quantity,omitempty"`
	// Start Choice
	SerialNo string `xml:"serialno,omitempty"`
	LotNo    string `xml:"lotno,omitempty"`
	// End Choice
	Aisle          string   `xml:"aisle,omitempty"`
	Row            string   `xml:"row,omitempty"`
	Bin            string   `xml:"bin,omitempty"`
	Itemexpiration *DateYMD `xml:"itemexpiration,omitempty"`
	// End Sequence
}

type Itemdetails struct {
	// Start Sequence
	Itemdetail []Itemdetail `xml:"itemdetail"`
	// End Sequence
}

type Kitstatus struct {
	// Start Sequence
	LineNum        string   `xml:"line_num"`
	Invoiceprice   string   `xml:"invoiceprice,omitempty"`
	Deliverystatus string   `xml:"deliverystatus,omitempty"`
	DeliveryDate   *DateYMD `xml:"deliverydate,omitempty"`
	Deferralstatus string   `xml:"deferralstatus,omitempty"`
	// End Sequence
}

type LineItem struct {
	// Start Sequence
	// Start Choice
	AccountLabel string `xml:"accountlabel,omitempty"`
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	// End Choice
	OffsetglAccountNo string        `xml:"offsetglaccountno,omitempty"`
	Amount            string        `xml:"amount"`
	AllocationID      string        `xml:"allocationid,omitempty"`
	Memo              string        `xml:"memo,omitempty"`
	LocationID        string        `xml:"locationid,omitempty"`
	DepartmentID      string        `xml:"departmentid,omitempty"`
	Item1099          string        `xml:"item1099,omitempty"`
	Form1099Type      string        `xml:"form1099type,omitempty"`
	Form1099box       string        `xml:"form1099box,omitempty"`
	Key               string        `xml:"key,omitempty"`
	TotalpaID         string        `xml:"totalpaid,omitempty"`
	Totaldue          string        `xml:"totaldue,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	Revrectemplate    string        `xml:"revrectemplate,omitempty"`
	Defrevaccount     string        `xml:"defrevaccount,omitempty"`
	RevrecstartDate   *intacct.Date `xml:"revrecstartdate,omitempty"`
	RevrecendDate     *intacct.Date `xml:"revrecenddate,omitempty"`
	ProjectID         string        `xml:"projectid,omitempty"`
	CustomerID        string        `xml:"customerid,omitempty"`
	VendorID          string        `xml:"vendorid,omitempty"`
	EmployeeID        string        `xml:"employeeid,omitempty"`
	ItemID            string        `xml:"itemid,omitempty"`
	ClassID           string        `xml:"classid,omitempty"`
	ContractID        string        `xml:"contractid,omitempty"`
	WarehouseID       string        `xml:"warehouseid,omitempty"`
	Billable          string        `xml:"billable,omitempty"`
	// End Sequence
}

/* type ListType struct {
	Start string `xml:"start,attr,omitempty"`
	End   string `xml:"end,attr,omitempty"`
	Total string `xml:"total,attr,omitempty"`
} */

type Mailaddress struct {
	// Start Sequence
	Address1       string `xml:"address1,omitempty"`
	Address2       string `xml:"address2,omitempty"`
	City           string `xml:"city,omitempty"`
	State          string `xml:"state,omitempty"`
	Zip            string `xml:"zip,omitempty"`
	Country        string `xml:"country,omitempty"`
	Isocountrycode string `xml:"isocountrycode,omitempty"`
	Latitude       string `xml:"latitude,omitempty"`
	Longitude      string `xml:"longitude,omitempty"`
	// End Sequence
}

type Offset struct {
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
}

type Online struct {
	// Start Sequence
	BankAccountID string `xml:"bankaccountid"`
	Notifyemail   string `xml:"notifyemail,omitempty"`
	// End Sequence
}

type Onlineachpayment struct {
	// Start Sequence
	BankName          string `xml:"bankname"`
	AccountType       string `xml:"accounttype"`
	Accountnumber     string `xml:"accountnumber"`
	Routingnumber     string `xml:"routingnumber"`
	Accountholder     string `xml:"accountholder"`
	Usedefaultaccount string `xml:"usedefaultaccount,omitempty"`
	// End Sequence
}

type Onlinecardpayment struct {
	// Start Sequence
	Cardnum        string     `xml:"cardnum"`
	ExpiryDate     ExpiryDate `xml:"expirydate"`
	CardType       string     `xml:"cardtype"`
	Securitycode   string     `xml:"securitycode,omitempty"`
	Usedefaultcard string     `xml:"usedefaultcard,omitempty"`
	// End Sequence
}

/*type Parameter struct {
	// Start Sequence
	Name  string `xml:"name"`
	Value string `xml:"value"`
	// End Sequence
}*/

type PartialupdatePotransaction struct {
	// Start Sequence
	Dateposted *DateYMD `xml:"dateposted"`
	// End Sequence
	Key         string `xml:"key,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type Payitem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Paymentamount string `xml:"paymentamount"`
	Item1099      string `xml:"item1099,omitempty"`
	DepartmentID  string `xml:"departmentid,omitempty"`
	LocationID    string `xml:"locationid,omitempty"`
	// End Sequence
}

type Payitems struct {
	// Start Sequence
	Payitem []Payitem `xml:"payitem"`
	// End Sequence
}

type Paymentrequestitem struct {
	// Start Sequence
	Key             string `xml:"key"`
	Paymentamount   string `xml:"paymentamount"`
	Credittoapply   string `xml:"credittoapply,omitempty"`
	Discounttoapply string `xml:"discounttoapply,omitempty"`
	// End Sequence
	Externalkey bool `xml:"externalkey,attr,omitempty"`
}

type Paymentrequestitems struct {
	// Start Sequence
	Paymentrequestitem []Paymentrequestitem `xml:"paymentrequestitem"`
	// End Sequence
}

type Paypriority struct {
	Urgent string `xml:"urgent,attr,omitempty"`
	High   string `xml:"high,attr,omitempty"`
	Normal string `xml:"normal,attr,omitempty"`
	Low    string `xml:"low,attr,omitempty"`
}

type Payto struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type Penalty struct {
	// Start Sequence
	PenType      string `xml:"pen_type,omitempty"`
	Penamount    string `xml:"penamount,omitempty"`
	Penpercamn   string `xml:"penpercamn,omitempty"`
	Pengracedays string `xml:"pengracedays,omitempty"`
	// End Sequence
}

type Percentbase struct {
	// Start Sequence
	Category []string `xml:"category"`
	// End Sequence
}

type Personalinfo struct {
	// Start Choice
	ContactName string   `xml:"contactname,omitempty"`
	Contact     *Contact `xml:"contact,omitempty"`
	// End Choice
}

type PostRevrecscheduleentry struct {
	// Start Sequence
	RecordNo                string `xml:"recordno"`
	Postcurrencygainandloss string `xml:"postcurrencygainandloss,omitempty"`
	ExchrateType            string `xml:"exchratetype,omitempty"`
	// End Sequence
}

type Potransitem struct {
	// Start Sequence
	ItemID            string        `xml:"itemid"`
	Itemdesc          string        `xml:"itemdesc,omitempty"`
	Taxable           string        `xml:"taxable,omitempty"`
	WarehouseID       string        `xml:"warehouseid,omitempty"`
	Quantity          string        `xml:"quantity"`
	Unit              string        `xml:"unit,omitempty"`
	Price             string        `xml:"price,omitempty"`
	Overridetaxamount string        `xml:"overridetaxamount,omitempty"`
	Tax               string        `xml:"tax,omitempty"`
	LocationID        string        `xml:"locationid,omitempty"`
	DepartmentID      string        `xml:"departmentid,omitempty"`
	Memo              string        `xml:"memo,omitempty"`
	Itemdetails       *Itemdetails  `xml:"itemdetails,omitempty"`
	Form1099          string        `xml:"form1099,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	ProjectID         string        `xml:"projectid,omitempty"`
	CustomerID        string        `xml:"customerid,omitempty"`
	VendorID          string        `xml:"vendorid,omitempty"`
	EmployeeID        string        `xml:"employeeid,omitempty"`
	ClassID           string        `xml:"classid,omitempty"`
	ContractID        string        `xml:"contractid,omitempty"`
	Billable          string        `xml:"billable,omitempty"`
	// End Sequence
}

type Potransitems struct {
	// Start Sequence
	Potransitem []Potransitem `xml:"potransitem"`
	// End Sequence
}

type Priceentries struct {
	// Start Sequence
	Priceentry []Priceentry `xml:"priceentry"`
	// End Sequence
}

type Priceentry struct {
	// Start Sequence
	StartDate *DateYMD `xml:"startdate"`
	EndDate   *DateYMD `xml:"enddate"`
	Value     string   `xml:"value"`
	Markup    string   `xml:"markup"`
	Markdown  string   `xml:"markdown"`
	Bandup    string   `xml:"bandup"`
	Banddown  string   `xml:"banddown"`
	Memo      string   `xml:"memo"`
	// End Sequence
}

type Primary struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type Projectresource struct {
	// Start Sequence
	EmployeeID          string   `xml:"employeeid"`
	ItemID              string   `xml:"itemid,omitempty"`
	Resourcedescription string   `xml:"resourcedescription,omitempty"`
	StartDate           *DateYMD `xml:"startdate,omitempty"`
	Billingrate         string   `xml:"billingrate,omitempty"`
	Expenserate         string   `xml:"expenserate,omitempty"`
	Poaprate            string   `xml:"poaprate,omitempty"`
	// End Sequence
}

type Projectresources struct {
	// Start Sequence
	Projectresource []Projectresource `xml:"projectresource,omitempty"`
	// End Sequence
}

type Receipt struct {
	// Start Sequence
	PaymentDate      *DateYMD `xml:"paymentdate"`
	Payee            string   `xml:"payee"`
	ReceivedDate     *DateYMD `xml:"receiveddate"`
	Paymentmethod    string   `xml:"paymentmethod"`
	UndepglAccountNo string   `xml:"undepglaccountno"`
	RefID            string   `xml:"refid,omitempty"`
	Description      string   `xml:"description,omitempty"`
	SupDocID         string   `xml:"supdocid,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Receiptitems Receiptitems  `xml:"receiptitems"`
	// End Sequence
}

type Receiptitems struct {
	// Start Sequence
	LineItem []LineItem `xml:"lineitem"`
	// End Sequence
}

type Receiptkeys struct {
	// Start Sequence
	Receiptkey []string `xml:"receiptkey"`
	// End Sequence
}

type Receipts struct {
	// Start Sequence
	Receipt []Receipt `xml:"receipt"`
	// End Sequence
}

type ReclassifyBill struct {
	XMLName xml.Name `xml:"reclassify_bill"`
	// Start Sequence
	BillNo          string           `xml:"billno,omitempty"`
	ReferenceNo     string           `xml:"referenceno,omitempty"`
	Description     string           `xml:"description,omitempty"`
	TermName        string           `xml:"termname,omitempty"`
	Datedue         *DateYMD         `xml:"datedue,omitempty"`
	RecpayDate      *DateYMD         `xml:"recpaydate,omitempty"`
	Paypriority     *Paypriority     `xml:"paypriority,omitempty"`
	Onhold          string           `xml:"onhold,omitempty"`
	Reclassifyitems *Reclassifyitems `xml:"reclassifyitems,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReclassifyInvoice struct {
	// Start Sequence
	InvoiceNo       string           `xml:"invoiceno,omitempty"`
	ReferenceNo     string           `xml:"referenceno,omitempty"`
	Description     string           `xml:"description,omitempty"`
	TermName        string           `xml:"termname,omitempty"`
	Datedue         *DateYMD         `xml:"datedue,omitempty"`
	Reclassifyitems *Reclassifyitems `xml:"reclassifyitems,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type Reclassifyitems struct {
	// Start Sequence
	ReclassLineItems []ReclassLineItem `xml:"reclasslineitem"`
	// End Sequence
}

type ReclassLineItem struct {
	// Start Sequence
	// Start Choice
	AccountLabel string `xml:"accountlabel,omitempty"`
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	// End Choice
	Memo         string        `xml:"memo,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type ReconcileBank struct {
	// Start Sequence
	BankAccountID          string   `xml:"bankaccountid"`
	CutoffDate             *DateYMD `xml:"cutoffdate,omitempty"`
	StatementendingDate    *DateYMD `xml:"statementendingdate"`
	Reconmode              string   `xml:"reconmode"`
	Statementendingbalance string   `xml:"statementendingbalance"`
	Banktxns               BankTxns `xml:"banktxns"`
	// End Sequence
}

type RecordCctransaction struct {
	// Start Sequence
	ChargecardID string   `xml:"chargecardid"`
	PaymentDate  *DateYMD `xml:"paymentdate"`
	ReferenceNo  string   `xml:"referenceno,omitempty"`
	Payee        string   `xml:"payee,omitempty"`
	Description  string   `xml:"description,omitempty"`
	SupDocID     string   `xml:"supdocid,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	CCPayItems   CCPayItems    `xml:"ccpayitems"`
	// End Sequence
}

type RecordDeposit struct {
	// Start Sequence
	BankAccountID string   `xml:"bankaccountid"`
	DepositDate   *DateYMD `xml:"depositdate"`
	DepositID     string   `xml:"depositid"`
	// Start Choice
	Receipts    *Receipts    `xml:"receipts,omitempty"`
	Receiptkeys *Receiptkeys `xml:"receiptkeys,omitempty"`
	// End Choice
	Description  string        `xml:"description,omitempty"`
	SupDocID     string        `xml:"supdocid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type RecordOtherreceipt struct {
	XMLName xml.Name `xml:"record_otherreceipt"`
	// Start Sequence
	PaymentDate   *DateYMD `xml:"paymentdate"`
	Payee         string   `xml:"payee"`
	ReceivedDate  *DateYMD `xml:"receiveddate"`
	Paymentmethod string   `xml:"paymentmethod"`
	// Start Choice
	UndepglAccountNo string `xml:"undepglaccountno,omitempty"`
	// Start Sequence
	BankAccountID string   `xml:"bankaccountid,omitempty"`
	DepositDate   *DateYMD `xml:"depositdate,omitempty"`
	// End Sequence
	// End Choice
	RefID       string `xml:"refid,omitempty"`
	Description string `xml:"description,omitempty"`
	SupDocID    string `xml:"supdocid,omitempty"`
	// Start Sequence
	Currency string `xml:"currency,omitempty"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Receiptitems Receiptitems  `xml:"receiptitems"`
	// End Sequence
}

type RecordWUadjjournalentries struct {
	// Start Sequence
	WUjournalentries WUjournalentries `xml:"wujournalentries"`
	// End Sequence
}

type RecordWUcctransactions struct {
	// Start Sequence
	WUcctransactions WUcctransactions `xml:"wucctransactions"`
	// End Sequence
}

type RecordWUdisbursements struct {
	// Start Sequence
	WUdisbursements WUdisbursements `xml:"wudisbursements"`
	// End Sequence
}

type RecordWUjournalentries struct {
	// Start Sequence
	WUjournalentries WUjournalentries `xml:"wujournalentries"`
	// End Sequence
}

type RecordWUReceipts struct {
	// Start Sequence
	WUReceipts WUReceipts `xml:"wureceipts"`
	// End Sequence
}

type Recurbillitems struct {
	// Start Sequence
	RecurLineItem []RecurLineItem `xml:"recurlineitem"`
	// End Sequence
}

type Recurinvoiceitems struct {
	// Start Sequence
	RecurLineItem []RecurLineItem `xml:"recurlineitem"`
	// End Sequence
}

type RecurLineItem struct {
	// Start Sequence
	// Start Choice
	AccountLabel string `xml:"accountlabel,omitempty"`
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	// End Choice
	Form1099     string        `xml:"form1099,omitempty"`
	Amount       string        `xml:"amount"`
	Memo         string        `xml:"memo,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Recursotransitem struct {
	// Start Sequence
	ItemID            string        `xml:"itemid"`
	Itemdesc          string        `xml:"itemdesc,omitempty"`
	Taxable           string        `xml:"taxable,omitempty"`
	WarehouseID       string        `xml:"warehouseid,omitempty"`
	Quantity          string        `xml:"quantity"`
	Unit              string        `xml:"unit,omitempty"`
	Price             string        `xml:"price,omitempty"`
	Discsurchargememo string        `xml:"discsurchargememo,omitempty"`
	LocationID        string        `xml:"locationid,omitempty"`
	DepartmentID      string        `xml:"departmentid,omitempty"`
	Memo              string        `xml:"memo,omitempty"`
	Itemdetails       *Itemdetails  `xml:"itemdetails,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	Revrectemplate    string        `xml:"revrectemplate,omitempty"`
	RevrecstartDate   *DateYMD      `xml:"revrecstartdate,omitempty"`
	RevrecendDate     *DateYMD      `xml:"revrecenddate,omitempty"`
	Status            string        `xml:"status,omitempty"`
	ProjectID         string        `xml:"projectid,omitempty"`
	CustomerID        string        `xml:"customerid,omitempty"`
	VendorID          string        `xml:"vendorid,omitempty"`
	EmployeeID        string        `xml:"employeeid,omitempty"`
	ClassID           string        `xml:"classid,omitempty"`
	ContractID        string        `xml:"contractid,omitempty"`
	// End Sequence
}

type Recursotransitems struct {
	// Start Sequence
	Recursotransitem []Recursotransitem `xml:"recursotransitem"`
	// End Sequence
}

type RestrictedDepts struct {
	// Start Sequence
	DepartmentID []string `xml:"departmentid"`
	// End Sequence
}

type RestrictedLocs struct {
	// Start Sequence
	LocationID []string `xml:"locationid"`
	// End Sequence
}

type ResumeRevrecschedule struct {
	// Start Sequence
	RecordNo         string `xml:"recordno"`
	Adjustpostingday string `xml:"adjustpostingday"`
	Memo             string `xml:"memo,omitempty"`
	// End Sequence
}

type Returnto struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type Revending struct {
	// Start Choice
	Occur   string   `xml:"occur,omitempty"`
	EndDate *DateYMD `xml:"enddate,omitempty"`
	// End Choice
}

type ReverseAppayment struct {
	// Start Sequence
	Datereversed *DateYMD `xml:"datereversed"`
	Description  string   `xml:"description,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReverseArpayment struct {
	// Start Sequence
	Datereversed     *DateYMD `xml:"datereversed"`
	Description      string   `xml:"description,omitempty"`
	Nsfclosedaccount string   `xml:"nsfclosedaccount,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReverseBill struct {
	// Start Sequence
	Datereversed *DateYMD `xml:"datereversed"`
	Description  string   `xml:"description,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReverseCctransaction struct {
	// Start Sequence
	Datereversed *DateYMD `xml:"datereversed"`
	Memo         string   `xml:"memo,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReverseExpensereport struct {
	// Start Sequence
	Datereversed *DateYMD `xml:"datereversed"`
	Description  string   `xml:"description,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type ReverseInvoice struct {
	// Start Sequence
	Datereversed *DateYMD `xml:"datereversed"`
	Description  string   `xml:"description,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type Revrecentries struct {
	// Start Sequence
	Revrecentry []Revrecentry `xml:"revrecentry"`
	// End Sequence
}

type Revrecentry struct {
	// Start Sequence
	RecordNo    string   `xml:"recordno,omitempty"`
	PostingDate *DateYMD `xml:"postingdate,omitempty"`
	AccountNo   string   `xml:"accountno,omitempty"`
	TrxAmount   string   `xml:"trx_amount,omitempty"`
	Cumpercent  string   `xml:"cumpercent,omitempty"`
	Description string   `xml:"description,omitempty"`
	// End Sequence
}

type RunDdsJob struct {
	Object            string             `xml:"object"`
	CloudDelivery     string             `xml:"cloudDelivery"`
	JobType           string             `xml:"jobType"`
	TimeStamp         time.Time          `xml:"timeStamp,omitempty"`
	FileConfiguration *FileConfiguration `xml:"fileConfiguration,omitempty"`
}

type SendAppaymentrequest struct {
	// Start Sequence
	Appaymentkeys APPaymentKeys `xml:"appaymentkeys"`
	// End Sequence
}

type Shipto struct {
	// Start Choice
	Contact     *Contact `xml:"contact,omitempty"`
	ContactName string   `xml:"contactname,omitempty"`
	// End Choice
}

type Sortfield struct {
	// Valid Values: asc,desc
	Order string `xml:"order,attr"`
}

type Sorts struct {
	// Start Sequence
	Sortfield []Sortfield `xml:"sortfield"`
	// End Sequence
}

type Sotransitem struct {
	// Start Sequence
	Bundlenumber      string             `xml:"bundlenumber,omitempty"`
	ItemID            string             `xml:"itemid"`
	Itemdesc          string             `xml:"itemdesc,omitempty"`
	Taxable           string             `xml:"taxable,omitempty"`
	WarehouseID       string             `xml:"warehouseid,omitempty"`
	Quantity          string             `xml:"quantity"`
	Unit              string             `xml:"unit,omitempty"`
	Discountpercent   string             `xml:"discountpercent,omitempty"`
	Price             string             `xml:"price,omitempty"`
	Discsurchargememo string             `xml:"discsurchargememo,omitempty"`
	LocationID        string             `xml:"locationid,omitempty"`
	DepartmentID      string             `xml:"departmentid,omitempty"`
	Memo              string             `xml:"memo,omitempty"`
	Itemdetails       *Itemdetails       `xml:"itemdetails,omitempty"`
	CustomFields      *CustomFields      `xml:"customfields,omitempty"`
	Revrectemplate    string             `xml:"revrectemplate,omitempty"`
	RevrecstartDate   *DateYMD           `xml:"revrecstartdate,omitempty"`
	RevrecendDate     *DateYMD           `xml:"revrecenddate,omitempty"`
	Renewalmacro      string             `xml:"renewalmacro,omitempty"`
	ProjectID         string             `xml:"projectid,omitempty"`
	CustomerID        string             `xml:"customerid,omitempty"`
	VendorID          string             `xml:"vendorid,omitempty"`
	EmployeeID        string             `xml:"employeeid,omitempty"`
	ClassID           string             `xml:"classid,omitempty"`
	ContractID        string             `xml:"contractid,omitempty"`
	Fulfillmentstatus *Fulfillmentstatus `xml:"fulfillmentstatus,omitempty"`
	TaskNo            string             `xml:"taskno,omitempty"`
	Billingtemplate   string             `xml:"billingtemplate,omitempty"`
	Dropship          string             `xml:"dropship,omitempty"`
	// End Sequence
}

type Sotransitems struct {
	// Start Sequence
	Sotransitem []Sotransitem `xml:"sotransitem"`
	// End Sequence
}

type StatGLTransactionEntries struct {
	// Start Sequence
	GLentry []GLentry `xml:"glentry"`
	// End Sequence
}

type Stkittransitem struct {
	// Start Sequence
	ItemID       string        `xml:"itemid"`
	Itemdesc     string        `xml:"itemdesc,omitempty"`
	WarehouseID  string        `xml:"warehouseid"`
	Quantity     string        `xml:"quantity"`
	Unit         string        `xml:"unit,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Stkittransitems struct {
	// Start Sequence
	Stkittransitem Stkittransitem `xml:"stkittransitem"`
	// End Sequence
}

type Subtotal struct {
	// Start Sequence
	Description  string        `xml:"description"`
	Total        string        `xml:"total"`
	Absval       string        `xml:"absval,omitempty"`
	Percentval   string        `xml:"percentval,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Subtotals struct {
	// Start Sequence
	Subtotal []Subtotal `xml:"subtotal"`
	// End Sequence
}

type Taskresources struct {
	// Start Sequence
	EmployeeID []string `xml:"employeeid"`
	// End Sequence
}

type TerminateRevrecschedule struct {
	// Start Sequence
	RecordNo string `xml:"recordno"`
	Category string `xml:"category,omitempty"`
	Memo     string `xml:"memo,omitempty"`
	// End Sequence
}

type Timesheetitem struct {
	LineNo                    string        `xml:"lineno,omitempty"`
	CustomerID                string        `xml:"customerid,omitempty"`
	ItemID                    string        `xml:"itemid,omitempty"`
	ProjectID                 string        `xml:"projectid,omitempty"`
	TaskName                  string        `xml:"taskname,omitempty"`
	TimeType                  string        `xml:"timetype,omitempty"`
	Billable                  string        `xml:"billable,omitempty"`
	LocationID                string        `xml:"locationid,omitempty"`
	DepartmentID              string        `xml:"departmentid,omitempty"`
	EntryDate                 *DateYMD      `xml:"entrydate"`
	Qty                       string        `xml:"qty"`
	Timesheetentrydescription string        `xml:"timesheetentrydescription,omitempty"`
	Notes                     string        `xml:"notes,omitempty"`
	VendorID                  string        `xml:"vendorid,omitempty"`
	ClassID                   string        `xml:"classid,omitempty"`
	ContractID                string        `xml:"contractid,omitempty"`
	WarehouseID               string        `xml:"warehouseid,omitempty"`
	Clznamount                string        `xml:"clznamount,omitempty"`
	Extbillrate               string        `xml:"extbillrate,omitempty"`
	Extcostrate               string        `xml:"extcostrate,omitempty"`
	CustomFields              *CustomFields `xml:"customfields,omitempty"`
}

type Timesheetitems struct {
	// Start Sequence
	Timesheetitem []Timesheetitem `xml:"timesheetitem"`
	// End Sequence
}

type UnpostRevrecscheduleentry struct {
	// Start Sequence
	RecordNo string `xml:"recordno"`
	Memo     string `xml:"memo,omitempty"`
	// End Sequence
}

type UpdateACHBankconfiguration struct {
	// Start Sequence
	DestinationID   string `xml:"destinationid,omitempty"`
	DestinationName string `xml:"destinationname,omitempty"`
	OriginID        string `xml:"originid,omitempty"`
	OriginName      string `xml:"originname,omitempty"`
	Referencecode   string `xml:"referencecode,omitempty"`
	Status          string `xml:"status,omitempty"`
	Eofmarker       string `xml:"eofmarker,omitempty"`
	// End Sequence
	ACHBankID string `xml:"achbankid,attr"`
}

type UpdateAllocation struct {
	// Start Sequence
	Description           string                 `xml:"description,omitempty"`
	Status                string                 `xml:"status,omitempty"`
	Allocateby            string                 `xml:"allocateby,omitempty"`
	Allocateto            string                 `xml:"allocateto,omitempty"`
	Docnumber             string                 `xml:"docnumber,omitempty"`
	SupDocID              string                 `xml:"supdocid,omitempty"`
	Updateallocationentry *Updateallocationentry `xml:"updateallocationentry,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateAPAccountLabel struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno,omitempty"`
	Description       string `xml:"description,omitempty"`
	OffsetglAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	// End Sequence
	AccountLabel string `xml:"accountlabel,attr"`
	SetNulls     bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateAPAdjustment struct {
	// Start Sequence
	VendorID     string   `xml:"vendorid,omitempty"`
	Datecreated  *DateYMD `xml:"datecreated,omitempty"`
	Dateposted   *DateYMD `xml:"dateposted,omitempty"`
	AdjustmentNo string   `xml:"adjustmentno,omitempty"`
	Action       string   `xml:"action,omitempty"`
	BillNo       string   `xml:"billno,omitempty"`
	Description  string   `xml:"description,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Updateapadjustmentitems *Updateapadjustmentitems `xml:"updateapadjustmentitems,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateAPTerm struct {
	// Start Sequence
	Description string    `xml:"description,omitempty"`
	Status      string    `xml:"status,omitempty"`
	Due         *Due      `xml:"due,omitempty"`
	Discount    *Discount `xml:"discount,omitempty"`
	Disccalcon  string    `xml:"disccalcon,omitempty"`
	Penalty     *Penalty  `xml:"penalty,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type UpdateARAccountLabel struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno,omitempty"`
	Description       string `xml:"description,omitempty"`
	OffsetglAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	Taxcode           string `xml:"taxcode,omitempty"`
	// End Sequence
	AccountLabel string `xml:"accountlabel,attr"`
	SetNulls     bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateARAdjustment struct {
	// Start Sequence
	CustomerID   string   `xml:"customerid,omitempty"`
	Datecreated  *DateYMD `xml:"datecreated,omitempty"`
	Dateposted   *DateYMD `xml:"dateposted,omitempty"`
	AdjustmentNo string   `xml:"adjustmentno,omitempty"`
	Action       string   `xml:"action,omitempty"`
	InvoiceNo    string   `xml:"invoiceno,omitempty"`
	Description  string   `xml:"description,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Updatearadjustmentitems *Updatearadjustmentitems `xml:"updatearadjustmentitems,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateARTerm struct {
	// Start Sequence
	Description string    `xml:"description,omitempty"`
	Status      string    `xml:"status,omitempty"`
	Due         *Due      `xml:"due,omitempty"`
	Discount    *Discount `xml:"discount,omitempty"`
	Disccalcon  string    `xml:"disccalcon,omitempty"`
	Penalty     *Penalty  `xml:"penalty,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type UpdateBill struct {
	// Start Sequence
	VendorID    string    `xml:"vendorid,omitempty"`
	Datecreated *DateYMD  `xml:"datecreated,omitempty"`
	Dateposted  *DateYMD  `xml:"dateposted,omitempty"`
	Datedue     *DateYMD  `xml:"datedue,omitempty"`
	TermName    string    `xml:"termname,omitempty"`
	Action      string    `xml:"action,omitempty"`
	BillNo      string    `xml:"billno,omitempty"`
	Ponumber    string    `xml:"ponumber,omitempty"`
	Onhold      string    `xml:"onhold,omitempty"`
	Description string    `xml:"description,omitempty"`
	Payto       *Payto    `xml:"payto,omitempty"`
	Returnto    *Returnto `xml:"returnto,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	SupDocID        string           `xml:"supdocid,omitempty"`
	CustomFields    *CustomFields    `xml:"customfields,omitempty"`
	Updatebillitems *Updatebillitems `xml:"updatebillitems,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	PartialEdit bool   `xml:"partial_edit,attr,omitempty"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCctransaction struct {
	// Start Sequence
	PaymentDate *DateYMD `xml:"paymentdate,omitempty"`
	ReferenceNo string   `xml:"referenceno,omitempty"`
	Payee       string   `xml:"payee,omitempty"`
	Description string   `xml:"description,omitempty"`
	SupDocID    string   `xml:"supdocid,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields     *CustomFields     `xml:"customfields,omitempty"`
	Updateccpayitems *Updateccpayitems `xml:"updateccpayitems,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateCheckingaccount struct {
	// Start Sequence
	BankAccountNo string         `xml:"bankaccountno,omitempty"`
	LocationID    string         `xml:"locationid,omitempty"`
	BankName      string         `xml:"bankname,omitempty"`
	RoutingNo     string         `xml:"routingno,omitempty"`
	BranchID      string         `xml:"branchid,omitempty"`
	Phone         string         `xml:"phone,omitempty"`
	Currency      string         `xml:"currency,omitempty"`
	Mailaddress   *Mailaddress   `xml:"mailaddress,omitempty"`
	Status        string         `xml:"status,omitempty"`
	Disableiet    string         `xml:"disableiet,omitempty"`
	FinancialData *FinancialData `xml:"financialdata,omitempty"`
	// Start Choice
	Servicechargeglaccount    string `xml:"servicechargeglaccount,omitempty"`
	Servicechargeaccountlabel string `xml:"servicechargeaccountlabel,omitempty"`
	// End Choice
	// Start Choice
	Interestearnedglaccount    string `xml:"interestearnedglaccount,omitempty"`
	Interestearnedaccountlabel string `xml:"interestearnedaccountlabel,omitempty"`
	// End Choice
	DepartmentID          string            `xml:"departmentid,omitempty"`
	Checkinfocontact      *CheckInfoContact `xml:"checkinfocontact,omitempty"`
	Checklayout           *CheckLayout      `xml:"checklayout,omitempty"`
	Nextcheck             string            `xml:"nextcheck,omitempty"`
	ACHEnabled            string            `xml:"achenabled,omitempty"`
	ACHBankID             string            `xml:"achbankid,omitempty"`
	CompanyName           string            `xml:"companyname,omitempty"`
	Companyidentification string            `xml:"companyidentification,omitempty"`
	Financialinstitution  string            `xml:"financialinstitution,omitempty"`
	Description           string            `xml:"description,omitempty"`
	DiscretionaryData     string            `xml:"discretionarydata,omitempty"`
	Userecommendedsetup   string            `xml:"userecommendedsetup,omitempty"`
	Serviceclasscode      string            `xml:"serviceclasscode,omitempty"`
	BatchID               string            `xml:"batchid,omitempty"`
	Tracenumberseq        string            `xml:"tracenumberseq,omitempty"`
	Usetracenumber        string            `xml:"usetracenumber,omitempty"`
	Docnumberseq          string            `xml:"docnumberseq,omitempty"`
	Visibility            *Visibility       `xml:"visibility,omitempty"`
	Outsourcecheck        string            `xml:"outsourcecheck,omitempty"`
	FractionalroutingNo   string            `xml:"fractionalroutingno,omitempty"`
	Nameontheaccount      string            `xml:"nameontheaccount,omitempty"`
	Amexchecknum          string            `xml:"amexchecknum,omitempty"`
	Outsourceach          string            `xml:"outsourceach,omitempty"`
	AboFirstName          string            `xml:"abo_first_name,omitempty"`
	AboMiddleName         string            `xml:"abo_middle_name,omitempty"`
	AboLastName           string            `xml:"abo_last_name,omitempty"`
	AboPhoneNumber        string            `xml:"abo_phone_number,omitempty"`
	AboEmailID            string            `xml:"abo_email_id,omitempty"`
	// End Sequence
	BankAccountID string `xml:"bankaccountid,attr"`
	SetNulls      bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey   bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateClass struct {
	// Start Sequence
	Name         string        `xml:"name,omitempty"`
	Description  string        `xml:"description,omitempty"`
	ParentID     string        `xml:"parentid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateContact struct {
	// Start Sequence
	Printas     string       `xml:"printas"`
	CompanyName string       `xml:"companyname,omitempty"`
	Taxable     string       `xml:"taxable,omitempty"`
	TaxGroup    string       `xml:"taxgroup,omitempty"`
	Prefix      string       `xml:"prefix,omitempty"`
	FirstName   string       `xml:"firstname,omitempty"`
	LastName    string       `xml:"lastname,omitempty"`
	Initial     string       `xml:"initial,omitempty"`
	Phone1      string       `xml:"phone1,omitempty"`
	Phone2      string       `xml:"phone2,omitempty"`
	CellPhone   string       `xml:"cellphone,omitempty"`
	Pager       string       `xml:"pager,omitempty"`
	Fax         string       `xml:"fax,omitempty"`
	Email1      string       `xml:"email1,omitempty"`
	Email2      string       `xml:"email2,omitempty"`
	URL1        string       `xml:"url1,omitempty"`
	URL2        string       `xml:"url2,omitempty"`
	Status      string       `xml:"status,omitempty"`
	Mailaddress *Mailaddress `xml:"mailaddress,omitempty"`
	TaxID       string       `xml:"taxid,omitempty"`
	// End Sequence
	ContactName string `xml:"contactname,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCustomer struct {
	// Start Sequence
	Name              string           `xml:"name,omitempty"`
	ParentID          string           `xml:"parentid,omitempty"`
	TermName          string           `xml:"termname,omitempty"`
	CustrepID         string           `xml:"custrepid,omitempty"`
	Shippingmethod    string           `xml:"shippingmethod,omitempty"`
	CustType          string           `xml:"custtype,omitempty"`
	TaxID             string           `xml:"taxid,omitempty"`
	Creditlimit       string           `xml:"creditlimit,omitempty"`
	TerritoryID       string           `xml:"territoryid,omitempty"`
	ResaleNo          string           `xml:"resaleno,omitempty"`
	Deliveryoptions   *Deliveryoptions `xml:"deliveryoptions,omitempty"`
	AccountLabel      string           `xml:"accountlabel,omitempty"`
	GLAccountNo       string           `xml:"glaccountno,omitempty"`
	GLgroup           string           `xml:"glgroup,omitempty"`
	Onhold            string           `xml:"onhold,omitempty"`
	Comments          string           `xml:"comments,omitempty"`
	Status            string           `xml:"status,omitempty"`
	Currency          string           `xml:"currency,omitempty"`
	Primary           *Primary         `xml:"primary,omitempty"`
	Billto            *BillTo          `xml:"billto,omitempty"`
	Shipto            *Shipto          `xml:"shipto,omitempty"`
	Contactinfo       *ContactInfo     `xml:"contactinfo,omitempty"`
	Contactlist       *ContactList     `xml:"contactlist,omitempty"`
	Vsoepricelist     string           `xml:"vsoepricelist,omitempty"`
	CustomFields      *CustomFields    `xml:"customfields,omitempty"`
	Visibility        *Visibility      `xml:"visibility,omitempty"`
	SupDocID          string           `xml:"supdocid,omitempty"`
	OffsetglAccountNo string           `xml:"offsetglaccountno,omitempty"`
	// End Sequence
	CustomerID  string `xml:"customerid,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCustomerachinfo struct {
	// Start Sequence
	BankName        string `xml:"bankname"`
	Bankadd1        string `xml:"bankadd1,omitempty"`
	Bankadd2        string `xml:"bankadd2,omitempty"`
	Aba             string `xml:"aba"`
	Accountnumber   string `xml:"accountnumber"`
	BankAccountType string `xml:"bankaccounttype"`
	// End Sequence
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCustomerbankaccount struct {
	// Start Sequence
	Accountholder  string       `xml:"accountholder,omitempty"`
	Description    string       `xml:"description,omitempty"`
	Status         string       `xml:"status,omitempty"`
	Mailaddress    *Mailaddress `xml:"mailaddress,omitempty"`
	Defaultaccount string       `xml:"defaultaccount,omitempty"`
	// End Sequence
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCustomerchargecard struct {
	// Start Sequence
	ExpMonth      string       `xml:"exp_month,omitempty"`
	ExpYear       string       `xml:"exp_year,omitempty"`
	Description   string       `xml:"description,omitempty"`
	Status        string       `xml:"status,omitempty"`
	Mailaddress   *Mailaddress `xml:"mailaddress,omitempty"`
	Defaultcard   string       `xml:"defaultcard,omitempty"`
	Usebilltoaddr string       `xml:"usebilltoaddr,omitempty"`
	// End Sequence
	RecordNo    string `xml:"recordno,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateCustomervisibility struct {
	// Start Sequence
	Visibility *Visibility `xml:"visibility,omitempty"`
	// End Sequence
	CustomerID string `xml:"customerid,attr"`
}

type UpdateDepartment struct {
	// Start Sequence
	Title        string        `xml:"title,omitempty"`
	ParentID     string        `xml:"parentid,omitempty"`
	SupervisorID string        `xml:"supervisorid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Custtitle    string        `xml:"custtitle,omitempty"`
	// End Sequence
	DepartmentID string `xml:"departmentid,attr"`
	SetNulls     bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey  bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateEarningType struct {
	// Start Sequence
	Method            string        `xml:"method,omitempty"`
	BillableacctNo    string        `xml:"billableacctno,omitempty"`
	NonbillableacctNo string        `xml:"nonbillableacctno,omitempty"`
	Ratemultiplier    string        `xml:"ratemultiplier,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateEmployee struct {
	// Start Sequence
	Ssn                  string        `xml:"ssn,omitempty"`
	Title                string        `xml:"title,omitempty"`
	LocationID           string        `xml:"locationid,omitempty"`
	DepartmentID         string        `xml:"departmentid,omitempty"`
	ClassID              string        `xml:"classid,omitempty"`
	SupervisorID         string        `xml:"supervisorid,omitempty"`
	BirthDate            *DateYMD      `xml:"birthdate,omitempty"`
	StartDate            *DateYMD      `xml:"startdate,omitempty"`
	EndDate              *DateYMD      `xml:"enddate,omitempty"`
	TerminationType      string        `xml:"terminationtype,omitempty"`
	EmployeeType         string        `xml:"employeetype,omitempty"`
	Gender               string        `xml:"gender,omitempty"`
	Status               string        `xml:"status,omitempty"`
	Currency             string        `xml:"currency,omitempty"`
	Name1099             string        `xml:"name1099,omitempty"`
	Form1099Type         string        `xml:"form1099type,omitempty"`
	Form1099box          string        `xml:"form1099box,omitempty"`
	EarningtypeName      string        `xml:"earningtypename,omitempty"`
	Postactualcost       string        `xml:"postactualcost,omitempty"`
	Personalinfo         Personalinfo  `xml:"personalinfo"`
	Contactlist          *ContactList  `xml:"contactlist,omitempty"`
	Paymethod            string        `xml:"paymethod,omitempty"`
	Paymentnotify        string        `xml:"paymentnotify,omitempty"`
	ACHEnabled           string        `xml:"achenabled,omitempty"`
	ACHBankroutingnumber string        `xml:"achbankroutingnumber,omitempty"`
	ACHAccountnumber     string        `xml:"achaccountnumber,omitempty"`
	ACHAccountType       string        `xml:"achaccounttype,omitempty"`
	ACHRemittanceType    string        `xml:"achremittancetype,omitempty"`
	CustomFields         *CustomFields `xml:"customfields,omitempty"`
	Mergepaymentreq      string        `xml:"mergepaymentreq,omitempty"`
	// End Sequence
	EmployeeID  string `xml:"employeeid,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateEmployeerate struct {
	// Start Sequence
	RatestartDate *DateYMD      `xml:"ratestartdate,omitempty"`
	Billingrate   string        `xml:"billingrate,omitempty"`
	Salaryrate    string        `xml:"salaryrate,omitempty"`
	CustomFields  *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateExpenseadjustmentreport struct {
	// Start Sequence
	EmployeeID               string                    `xml:"employeeid,omitempty"`
	Datecreated              *DateYMD                  `xml:"datecreated,omitempty"`
	AdjustmentNo             string                    `xml:"adjustmentno,omitempty"`
	Docnumber                string                    `xml:"docnumber,omitempty"`
	Description              string                    `xml:"description,omitempty"`
	Basecurr                 string                    `xml:"basecurr,omitempty"`
	Currency                 string                    `xml:"currency,omitempty"`
	Updateexpenseadjustments *Updateexpenseadjustments `xml:"updateexpenseadjustments,omitempty"`
	SupDocID                 string                    `xml:"supdocid,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateExpensepaymentType struct {
	// Start Sequence
	Description     string `xml:"description,omitempty"`
	Nonreimbursable string `xml:"nonreimbursable,omitempty"`
	OffsetacctNo    string `xml:"offsetacctno,omitempty"`
	Status          string `xml:"status,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type UpdateExpensereport struct {
	EmployeeID      string          `xml:"employeeid,omitempty"`
	Datecreated     *DateYMD        `xml:"datecreated,omitempty"`
	Dateposted      *DateYMD        `xml:"dateposted,omitempty"`
	ExpensereportNo string          `xml:"expensereportno,omitempty"`
	State           string          `xml:"state,omitempty"`
	Description     string          `xml:"description,omitempty"`
	Memo            string          `xml:"memo,omitempty"`
	Basecurr        string          `xml:"basecurr,omitempty"`
	Currency        string          `xml:"currency,omitempty"`
	CustomFields    *CustomFields   `xml:"customfields,omitempty"`
	SupDocID        string          `xml:"supdocid,omitempty"`
	Updateexpenses  *Updateexpenses `xml:"updateexpenses,omitempty"`
	Key             string          `xml:"key,attr"`
	SetNulls        bool            `xml:"set_nulls,attr,omitempty"`
	Externalkey     bool            `xml:"externalkey,attr,omitempty"`
}

type UpdateExpenseType struct {
	// Start Sequence
	GLAccountNo       string `xml:"glaccountno,omitempty"`
	Description       string `xml:"description,omitempty"`
	OffsetglAccountNo string `xml:"offsetglaccountno,omitempty"`
	Status            string `xml:"status,omitempty"`
	// End Sequence
	ExpenseType string `xml:"expensetype,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateGLAccount struct {
	// Start Sequence
	Title              string        `xml:"title,omitempty"`
	Normalbalance      string        `xml:"normalbalance,omitempty"`
	AccountType        string        `xml:"accounttype,omitempty"`
	ClosingType        string        `xml:"closingtype,omitempty"`
	ClosingAccountNo   string        `xml:"closingaccountno,omitempty"`
	Status             string        `xml:"status,omitempty"`
	Requiredept        string        `xml:"requiredept,omitempty"`
	Requireloc         string        `xml:"requireloc,omitempty"`
	Requireproject     string        `xml:"requireproject,omitempty"`
	Requirecustomer    string        `xml:"requirecustomer,omitempty"`
	Requirevendor      string        `xml:"requirevendor,omitempty"`
	Requireitem        string        `xml:"requireitem,omitempty"`
	Requireemployee    string        `xml:"requireemployee,omitempty"`
	Requireclass       string        `xml:"requireclass,omitempty"`
	Requirecontract    string        `xml:"requirecontract,omitempty"`
	Requirewarehouse   string        `xml:"requirewarehouse,omitempty"`
	Taxable            string        `xml:"taxable,omitempty"`
	CustomFields       *CustomFields `xml:"customfields,omitempty"`
	Category           string        `xml:"category,omitempty"`
	Taxcode            string        `xml:"taxcode,omitempty"`
	Mrccode            string        `xml:"mrccode,omitempty"`
	Alternativeaccount string        `xml:"alternativeaccount,omitempty"`
	// End Sequence
	GLAccountNo string `xml:"glaccountno,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateIctransaction struct {
	// Start Sequence
	Datecreated        *DateYMD            `xml:"datecreated,omitempty"`
	ReferenceNo        string              `xml:"referenceno,omitempty"`
	Message            string              `xml:"message,omitempty"`
	ExternalID         string              `xml:"externalid,omitempty"`
	CustomFields       *CustomFields       `xml:"customfields,omitempty"`
	State              string              `xml:"state,omitempty"`
	UpdateICTransItems *UpdateICTransItems `xml:"updateictransitems,omitempty"`
	Updatesubtotals    *Updatesubtotals    `xml:"updatesubtotals,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateInvoice struct {
	// Start Sequence
	CustomerID  string    `xml:"customerid,omitempty"`
	Datecreated *DateYMD  `xml:"datecreated,omitempty"`
	Dateposted  *DateYMD  `xml:"dateposted,omitempty"`
	Datedue     *DateYMD  `xml:"datedue,omitempty"`
	TermName    string    `xml:"termname,omitempty"`
	Action      string    `xml:"action,omitempty"`
	InvoiceNo   string    `xml:"invoiceno,omitempty"`
	Ponumber    string    `xml:"ponumber,omitempty"`
	Description string    `xml:"description,omitempty"`
	Payto       *Payto    `xml:"payto,omitempty"`
	Returnto    *Returnto `xml:"returnto,omitempty"`
	// Start Sequence
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	SupDocID           string              `xml:"supdocid,omitempty"`
	CustomFields       *CustomFields       `xml:"customfields,omitempty"`
	Updateinvoiceitems *Updateinvoiceitems `xml:"updateinvoiceitems,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateInvpricelistentry struct {
	// Start Sequence
	// Start Choice
	ItemID        string `xml:"itemid,omitempty"`
	ProductlineID string `xml:"productlineid,omitempty"`
	// End Choice
	Datefrom        *DateYMD `xml:"datefrom,omitempty"`
	Dateto          *DateYMD `xml:"dateto,omitempty"`
	MinimumQuantity string   `xml:"minimum_quantity,omitempty"`
	MaximumQuantity string   `xml:"maximum_quantity,omitempty"`
	Value           string   `xml:"value,omitempty"`
	ValueType       string   `xml:"valuetype,omitempty"`
	Fixed           string   `xml:"fixed,omitempty"`
	Status          string   `xml:"status,omitempty"`
	// End Sequence
	RecordNo string `xml:"recordno,attr"`
}

type UpdateItem struct {
	// Start Sequence
	Name                     string         `xml:"name,omitempty"`
	Status                   string         `xml:"status,omitempty"`
	EnableBins               string         `xml:"enable_bins,omitempty"`
	ExtendedDescription      string         `xml:"extended_description,omitempty"`
	ProductlineID            string         `xml:"productlineid,omitempty"`
	SubstituteID             string         `xml:"substituteid,omitempty"`
	ShipWeight               string         `xml:"ship_weight,omitempty"`
	Taxable                  string         `xml:"taxable,omitempty"`
	StandardCost             string         `xml:"standard_cost,omitempty"`
	BasePrice                string         `xml:"base_price,omitempty"`
	StandardUnit             string         `xml:"standard_unit,omitempty"`
	PurchaseUnit             string         `xml:"purchase_unit,omitempty"`
	PurchaseUnitFactor       string         `xml:"purchase_unit_factor,omitempty"`
	SalesUnit                string         `xml:"sales_unit,omitempty"`
	SalesUnitFactor          string         `xml:"sales_unit_factor,omitempty"`
	DefaultWarehouse         string         `xml:"default_warehouse,omitempty"`
	GLgroup                  string         `xml:"glgroup,omitempty"`
	Note                     string         `xml:"note,omitempty"`
	InventoryPrecision       string         `xml:"inventory_precision,omitempty"`
	PurchasingPrecision      string         `xml:"purchasing_precision,omitempty"`
	SalesPrecision           string         `xml:"sales_precision,omitempty"`
	Upc                      string         `xml:"upc,omitempty"`
	Hasstartenddates         string         `xml:"hasstartenddates,omitempty"`
	TermPeriod               string         `xml:"term_period,omitempty"`
	Defaultnoofperiods       string         `xml:"defaultnoofperiods,omitempty"`
	Computepriceforshortterm string         `xml:"computepriceforshortterm,omitempty"`
	Itaxgroup                *Itaxgroup     `xml:"itaxgroup,omitempty"`
	RevenuePosting           string         `xml:"revenue_posting,omitempty"`
	VendLineItems            *VendLineItems `xml:"vendlineitems,omitempty"`
	WhsLineItems             *WhsLineItems  `xml:"whslineitems,omitempty"`
	CompLineItems            *CompLineItems `xml:"complineitems,omitempty"`
	Taxcode                  string         `xml:"taxcode,omitempty"`
	Vsoecategory             string         `xml:"vsoecategory,omitempty"`
	Vsoedlvrstatus           string         `xml:"vsoedlvrstatus,omitempty"`
	Vsoerevdefstatus         string         `xml:"vsoerevdefstatus,omitempty"`
	Incomeaccount            string         `xml:"incomeaccount,omitempty"`
	Invaccount               string         `xml:"invaccount,omitempty"`
	Expenseaccount           string         `xml:"expenseaccount,omitempty"`
	Cogsaccount              string         `xml:"cogsaccount,omitempty"`
	Offsetoeglaccount        string         `xml:"offsetoeglaccount,omitempty"`
	Offsetpoglaccount        string         `xml:"offsetpoglaccount,omitempty"`
	Defrevaccount            string         `xml:"defrevaccount,omitempty"`
	Uomgrp                   string         `xml:"uomgrp,omitempty"`
	Dropship                 string         `xml:"dropship,omitempty"`
	Cnbillingtemplate        string         `xml:"cnbillingtemplate,omitempty"`
	Cnrevenuetemplate        string         `xml:"cnrevenuetemplate,omitempty"`
	Cnrevenue2template       string         `xml:"cnrevenue2template,omitempty"`
	Cnexpensetemplate        string         `xml:"cnexpensetemplate,omitempty"`
	Cnexpense2template       string         `xml:"cnexpense2template,omitempty"`
	CustomFields             *CustomFields  `xml:"customfields,omitempty"`
	Mrr                      bool           `xml:"mrr,omitempty"`
	// End Sequence
	ItemID string `xml:"itemid,attr"`
}

type UpdateJournal struct {
	// Start Sequence
	Title  string `xml:"title,omitempty"`
	Status string `xml:"status,omitempty"`
	// End Sequence
	Symbol      string `xml:"symbol,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateLocation struct {
	// Start Sequence
	Name         string        `xml:"name,omitempty"`
	ParentID     string        `xml:"parentid,omitempty"`
	SupervisorID string        `xml:"supervisorid,omitempty"`
	StartDate    *DateYMD      `xml:"startdate,omitempty"`
	EndDate      *DateYMD      `xml:"enddate,omitempty"`
	Status       string        `xml:"status,omitempty"`
	Primary      *Primary      `xml:"primary,omitempty"`
	Shipto       *Shipto       `xml:"shipto,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	Custtitle    string        `xml:"custtitle,omitempty"`
	// End Sequence
	LocationID  string `xml:"locationid,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdatePopricelist struct {
	// Start Sequence
	Datefrom *DateYMD `xml:"datefrom,omitempty"`
	Dateto   *DateYMD `xml:"dateto,omitempty"`
	Status   string   `xml:"status,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type UpdatePotransaction struct {
	// Start Sequence
	Datecreated    *DateYMD  `xml:"datecreated,omitempty"`
	Dateposted     *DateYMD  `xml:"dateposted,omitempty"`
	ReferenceNo    string    `xml:"referenceno,omitempty"`
	VendordocNo    string    `xml:"vendordocno,omitempty"`
	TermName       string    `xml:"termname,omitempty"`
	Datedue        *DateYMD  `xml:"datedue,omitempty"`
	Message        string    `xml:"message,omitempty"`
	Shippingmethod string    `xml:"shippingmethod,omitempty"`
	Returnto       *Returnto `xml:"returnto,omitempty"`
	Payto          *Payto    `xml:"payto,omitempty"`
	SupDocID       string    `xml:"supdocid,omitempty"`
	ExternalID     string    `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	CustomFields       *CustomFields       `xml:"customfields,omitempty"`
	State              string              `xml:"state,omitempty"`
	Updatepotransitems *Updatepotransitems `xml:"updatepotransitems,omitempty"`
	Updatesubtotals    *Updatesubtotals    `xml:"updatesubtotals,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateProject struct {
	// Start Sequence
	ProjectID          string             `xml:"projectid"`
	Name               string             `xml:"name"`
	Description        string             `xml:"description,omitempty"`
	ParentID           string             `xml:"parentid,omitempty"`
	Invoicewithparent  string             `xml:"invoicewithparent,omitempty"`
	Projectcategory    string             `xml:"projectcategory"`
	ProjectType        string             `xml:"projecttype,omitempty"`
	Projectstatus      string             `xml:"projectstatus,omitempty"`
	CustomerID         string             `xml:"customerid,omitempty"`
	ManagerID          string             `xml:"managerid,omitempty"`
	CustuserID         string             `xml:"custuserid,omitempty"`
	SalescontactID     string             `xml:"salescontactid,omitempty"`
	BeginDate          *DateYMD           `xml:"begindate,omitempty"`
	EndDate            *DateYMD           `xml:"enddate,omitempty"`
	DepartmentID       string             `xml:"departmentid,omitempty"`
	LocationID         string             `xml:"locationid,omitempty"`
	ClassID            string             `xml:"classid,omitempty"`
	Currency           string             `xml:"currency,omitempty"`
	BillingType        string             `xml:"billingtype,omitempty"`
	TermName           string             `xml:"termname,omitempty"`
	Docnumber          string             `xml:"docnumber,omitempty"`
	Billto             *BillTo            `xml:"billto,omitempty"`
	Shipto             *Shipto            `xml:"shipto,omitempty"`
	Contactinfo        *ContactInfo       `xml:"contactinfo,omitempty"`
	Sonumber           string             `xml:"sonumber,omitempty"`
	Ponumber           string             `xml:"ponumber,omitempty"`
	Poamount           string             `xml:"poamount,omitempty"`
	Pqnumber           string             `xml:"pqnumber,omitempty"`
	Budgetamount       string             `xml:"budgetamount,omitempty"`
	Budgetedcost       string             `xml:"budgetedcost,omitempty"`
	Budgetqty          string             `xml:"budgetqty,omitempty"`
	Userrestrictions   string             `xml:"userrestrictions,omitempty"`
	Obspercentcomplete string             `xml:"obspercentcomplete,omitempty"`
	BudgetID           string             `xml:"budgetid,omitempty"`
	Billingrate        string             `xml:"billingrate,omitempty"`
	Billingpricing     string             `xml:"billingpricing,omitempty"`
	Expenserate        string             `xml:"expenserate,omitempty"`
	Expensepricing     string             `xml:"expensepricing,omitempty"`
	Poaprate           string             `xml:"poaprate,omitempty"`
	Poappricing        string             `xml:"poappricing,omitempty"`
	Status             string             `xml:"status,omitempty"`
	SupDocID           string             `xml:"supdocid,omitempty"`
	Invoicemessage     string             `xml:"invoicemessage,omitempty"`
	Invoicecurrency    string             `xml:"invoicecurrency,omitempty"`
	Projectresources   []Projectresources `xml:"projectresources,omitempty"`
	Billingovermax     string             `xml:"billingovermax,omitempty"`
	Excludeexpenses    bool               `xml:"excludeexpenses,omitempty"`
	CustomFields       *CustomFields      `xml:"customfields,omitempty"`
	// End Sequence
	Key         string `xml:"key,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateRevrecschedule struct {
	// Start Sequence
	RecordNo      string        `xml:"recordno"`
	Memo          string        `xml:"memo,omitempty"`
	Revrecentries Revrecentries `xml:"revrecentries"`
	// End Sequence
}

type UpdateSavingsaccount struct {
	// Start Sequence
	BankAccountNo string         `xml:"bankaccountno,omitempty"`
	LocationID    string         `xml:"locationid,omitempty"`
	BankName      string         `xml:"bankname,omitempty"`
	RoutingNo     string         `xml:"routingno,omitempty"`
	BranchID      string         `xml:"branchid,omitempty"`
	Phone         string         `xml:"phone,omitempty"`
	Currency      string         `xml:"currency,omitempty"`
	Mailaddress   *Mailaddress   `xml:"mailaddress,omitempty"`
	Status        string         `xml:"status,omitempty"`
	Disableiet    string         `xml:"disableiet,omitempty"`
	FinancialData *FinancialData `xml:"financialdata,omitempty"`
	// Start Choice
	Servicechargeglaccount    string `xml:"servicechargeglaccount,omitempty"`
	Servicechargeaccountlabel string `xml:"servicechargeaccountlabel,omitempty"`
	// End Choice
	// Start Choice
	Interestearnedglaccount    string `xml:"interestearnedglaccount,omitempty"`
	Interestearnedaccountlabel string `xml:"interestearnedaccountlabel,omitempty"`
	// End Choice
	DepartmentID string      `xml:"departmentid,omitempty"`
	Visibility   *Visibility `xml:"visibility,omitempty"`
	// End Sequence
	BankAccountID string `xml:"bankaccountid,attr"`
	SetNulls      bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey   bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateSopricelist struct {
	// Start Sequence
	Datefrom *DateYMD `xml:"datefrom,omitempty"`
	Dateto   *DateYMD `xml:"dateto,omitempty"`
	Status   string   `xml:"status,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type UpdateSotransaction struct {
	// Start Sequence
	Datecreated    *DateYMD `xml:"datecreated,omitempty"`
	Dateposted     *DateYMD `xml:"dateposted,omitempty"`
	ReferenceNo    string   `xml:"referenceno,omitempty"`
	TermName       string   `xml:"termname,omitempty"`
	Datedue        *DateYMD `xml:"datedue,omitempty"`
	OrigdocDate    *DateYMD `xml:"origdocdate,omitempty"`
	Message        string   `xml:"message,omitempty"`
	Shippingmethod string   `xml:"shippingmethod,omitempty"`
	Shipto         *Shipto  `xml:"shipto,omitempty"`
	Billto         *BillTo  `xml:"billto,omitempty"`
	SupDocID       string   `xml:"supdocid,omitempty"`
	ExternalID     string   `xml:"externalid,omitempty"`
	// Start Sequence
	Basecurr string `xml:"basecurr,omitempty"`
	Currency string `xml:"currency"`
	// Start Choice
	// Start Sequence
	ExchrateDate *DateYMD `xml:"exchratedate,omitempty"`
	ExchrateType string   `xml:"exchratetype,omitempty"`
	// End Sequence
	Exchrate string `xml:"exchrate,omitempty"`
	// End Choice
	// End Sequence
	Vsoepricelist      string              `xml:"vsoepricelist,omitempty"`
	CustomFields       *CustomFields       `xml:"customfields,omitempty"`
	State              string              `xml:"state,omitempty"`
	ProjectID          string              `xml:"projectid,omitempty"`
	Updatesotransitems *Updatesotransitems `xml:"updatesotransitems,omitempty"`
	Updatesubtotals    *Updatesubtotals    `xml:"updatesubtotals,omitempty"`
	// End Sequence
	Key               string `xml:"key,attr"`
	SetNulls          bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey       bool   `xml:"externalkey,attr,omitempty"`
	Disablevalidation bool   `xml:"disablevalidation,attr,omitempty"`
}

type UpdateStatglaccount struct {
	// Start Sequence
	Title            string        `xml:"title,omitempty"`
	Requiredept      string        `xml:"requiredept,omitempty"`
	Requireloc       string        `xml:"requireloc,omitempty"`
	Requireproject   string        `xml:"requireproject,omitempty"`
	Requirecustomer  string        `xml:"requirecustomer,omitempty"`
	Requirevendor    string        `xml:"requirevendor,omitempty"`
	Requireitem      string        `xml:"requireitem,omitempty"`
	Requireemployee  string        `xml:"requireemployee,omitempty"`
	Requireclass     string        `xml:"requireclass,omitempty"`
	Requirecontract  string        `xml:"requirecontract,omitempty"`
	Requirewarehouse string        `xml:"requirewarehouse,omitempty"`
	CustomFields     *CustomFields `xml:"customfields,omitempty"`
	Category         string        `xml:"category,omitempty"`
	Status           string        `xml:"status,omitempty"`
	// End Sequence
	GLAccountNo string `xml:"glaccountno,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateTask struct {
	// Start Sequence
	TaskName           string         `xml:"taskname,omitempty"`
	ProjectID          string         `xml:"projectid,omitempty"`
	PbeginDate         *DateYMD       `xml:"pbegindate,omitempty"`
	PendDate           *DateYMD       `xml:"penddate,omitempty"`
	ItemID             string         `xml:"itemid,omitempty"`
	Billable           string         `xml:"billable,omitempty"`
	Taskdescription    string         `xml:"taskdescription,omitempty"`
	Ismilestone        string         `xml:"ismilestone,omitempty"`
	Utilized           string         `xml:"utilized,omitempty"`
	Priority           string         `xml:"priority,omitempty"`
	TaskNo             string         `xml:"taskno,omitempty"`
	Taskstatus         string         `xml:"taskstatus,omitempty"`
	Parentkey          string         `xml:"parentkey,omitempty"`
	ParenttaskName     string         `xml:"parenttaskname,omitempty"`
	Budgetqty          string         `xml:"budgetqty,omitempty"`
	Estqty             string         `xml:"estqty,omitempty"`
	TimeType           string         `xml:"timetype,omitempty"`
	Obspercentcomplete string         `xml:"obspercentcomplete,omitempty"`
	Taskresources      *Taskresources `xml:"taskresources,omitempty"`
	CustomFields       *CustomFields  `xml:"customfields,omitempty"`
	ClassID            string         `xml:"classid,omitempty"`
	Dependentonkey     string         `xml:"dependentonkey,omitempty"`
	DependentonName    string         `xml:"dependentonname,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateTaxdetail struct {
	// Start Sequence
	Description  string `xml:"description,omitempty"`
	TaxType      string `xml:"taxtype,omitempty"`
	Value        string `xml:"value,omitempty"`
	Mintaxable   string `xml:"mintaxable,omitempty"`
	Maxtaxable   string `xml:"maxtaxable,omitempty"`
	Include      string `xml:"include,omitempty"`
	Mintax       string `xml:"mintax,omitempty"`
	Maxtax       string `xml:"maxtax,omitempty"`
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	Taxauthority string `xml:"taxauthority,omitempty"`
	Status       string `xml:"status,omitempty"`
	// End Sequence
	DetailID string `xml:"detailid,attr"`
	SetNulls bool   `xml:"set_nulls,attr,omitempty"`
}

type UpdateTaxschedule struct {
	// Start Sequence
	Description string `xml:"description,omitempty"`
	TaxType     string `xml:"taxtype,omitempty"`
	Status      string `xml:"status,omitempty"`
	// End Sequence
	ScheduleID string `xml:"scheduleid,attr"`
}

type UpdateTerritory struct {
	// Start Sequence
	Name         string        `xml:"name,omitempty"`
	ParentID     string        `xml:"parentid,omitempty"`
	ManagerID    string        `xml:"managerid,omitempty"`
	Status       string        `xml:"status,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	TerritoryID string `xml:"territoryid,attr"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateTimesheet struct {
	// Start Sequence
	EmployeeID           string           `xml:"employeeid"`
	BeginDate            *DateYMD         `xml:"begindate"`
	GLPostDate           *DateYMD         `xml:"glpostdate,omitempty"`
	Timesheetdescription string           `xml:"timesheetdescription,omitempty"`
	State                string           `xml:"state,omitempty"`
	Timesheetitems       []Timesheetitems `xml:"timesheetitems"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateTimeType struct {
	// Start Sequence
	Status          string        `xml:"status,omitempty"`
	AccountNo       string        `xml:"accountno,omitempty"`
	OffsetAccountNo string        `xml:"offsetaccountno,omitempty"`
	EarningtypeName string        `xml:"earningtypename,omitempty"`
	CustomFields    *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateVendor struct {
	// Start Sequence
	Name                  string         `xml:"name,omitempty"`
	ParentID              string         `xml:"parentid,omitempty"`
	TermName              string         `xml:"termname,omitempty"`
	GLAccountNo           string         `xml:"glaccountno,omitempty"`
	AccountLabel          string         `xml:"accountlabel,omitempty"`
	VendType              string         `xml:"vendtype,omitempty"`
	TaxID                 string         `xml:"taxid,omitempty"`
	Creditlimit           string         `xml:"creditlimit,omitempty"`
	Paymethod             string         `xml:"paymethod,omitempty"`
	Outsourcecheck        string         `xml:"outsourcecheck,omitempty"`
	Outsourceach          string         `xml:"outsourceach,omitempty"`
	BillingType           string         `xml:"billingtype,omitempty"`
	VendorAccountNo       string         `xml:"vendoraccountno,omitempty"`
	Displocacctnocheck    string         `xml:"displocacctnocheck,omitempty"`
	Onhold                string         `xml:"onhold,omitempty"`
	Donotcutcheck         string         `xml:"donotcutcheck,omitempty"`
	Comments              string         `xml:"comments,omitempty"`
	Status                string         `xml:"status,omitempty"`
	Currency              string         `xml:"currency,omitempty"`
	Primary               *Primary       `xml:"primary,omitempty"`
	Returnto              *Returnto      `xml:"returnto,omitempty"`
	Payto                 *Payto         `xml:"payto,omitempty"`
	Contactinfo           *ContactInfo   `xml:"contactinfo,omitempty"`
	Contactto1099         *Contactto1099 `xml:"contactto1099,omitempty"`
	Contactlist           *ContactList   `xml:"contactlist,omitempty"`
	Name1099              string         `xml:"name1099,omitempty"`
	Form1099Type          string         `xml:"form1099type,omitempty"`
	Form1099box           string         `xml:"form1099box,omitempty"`
	CustomFields          *CustomFields  `xml:"customfields,omitempty"`
	Paymentnotify         string         `xml:"paymentnotify,omitempty"`
	ACHEnabled            string         `xml:"achenabled,omitempty"`
	Wireenabled           string         `xml:"wireenabled,omitempty"`
	Checkenabled          string         `xml:"checkenabled,omitempty"`
	ACHBankroutingnumber  string         `xml:"achbankroutingnumber,omitempty"`
	ACHAccountnumber      string         `xml:"achaccountnumber,omitempty"`
	ACHAccountType        string         `xml:"achaccounttype,omitempty"`
	ACHRemittanceType     string         `xml:"achremittancetype,omitempty"`
	WirebankName          string         `xml:"wirebankname,omitempty"`
	Wirebankroutingnumber string         `xml:"wirebankroutingnumber,omitempty"`
	Wireaccountnumber     string         `xml:"wireaccountnumber,omitempty"`
	WireaccountType       string         `xml:"wireaccounttype,omitempty"`
	PmplusremittanceType  string         `xml:"pmplusremittancetype,omitempty"`
	Pmplusemail           string         `xml:"pmplusemail,omitempty"`
	Pmplusfax             string         `xml:"pmplusfax,omitempty"`
	Displaytermdiscount   string         `xml:"displaytermdiscount,omitempty"`
	Visibility            *Visibility    `xml:"visibility,omitempty"`
	SupDocID              string         `xml:"supdocid,omitempty"`
	Mergepaymentreq       string         `xml:"mergepaymentreq,omitempty"`
	OffsetglAccountNo     string         `xml:"offsetglaccountno,omitempty"`
	// End Sequence
	VendorID    string `xml:"vendorid,attr"`
	SetNulls    bool   `xml:"set_nulls,attr,omitempty"`
	Externalkey bool   `xml:"externalkey,attr,omitempty"`
}

type UpdateVendorvisibility struct {
	// Start Sequence
	Visibility *Visibility `xml:"visibility,omitempty"`
	// End Sequence
	VendorID string `xml:"vendorid,attr"`
}

type UpdateVsoeitempricelist struct {
	// Start Sequence
	// Start Sequence
	Percentbase   Percentbase `xml:"percentbase"`
	Percentof     string      `xml:"percentof"`
	Usepricebands string      `xml:"usepricebands"`
	PricebandType string      `xml:"pricebandtype"`
	Pricebandrule string      `xml:"pricebandrule"`
	// End Sequence
	Status       string       `xml:"status,omitempty"`
	Priceentries Priceentries `xml:"priceentries"`
	// End Sequence
	Key string `xml:"key,attr"`
}

type UpdateVsoepricelist struct {
	// Start Sequence
	Description string `xml:"description,omitempty"`
	Status      string `xml:"status,omitempty"`
	Isdefault   string `xml:"isdefault,omitempty"`
	// End Sequence
	Name string `xml:"name,attr"`
}

type Updateallocationentry struct {
	// Start Choice
	Entry       *Entry       `xml:"entry,omitempty"`
	Updateentry *Updateentry `xml:"updateentry,omitempty"`
	// End Choice
}

type Updateapadjustmentitems struct {
	// Start Choice
	LineItem       *LineItem       `xml:"lineitem,omitempty"`
	UpdateLineItem *UpdateLineItem `xml:"updatelineitem,omitempty"`
	// End Choice
}

type Updatearadjustmentitems struct {
	// Start Choice
	LineItem       *LineItem       `xml:"lineitem,omitempty"`
	UpdateLineItem *UpdateLineItem `xml:"updatelineitem,omitempty"`
	// End Choice
}

type Updatebillitems struct {
	// Start Choice
	LineItem       *LineItem       `xml:"lineitem,omitempty"`
	UpdateLineItem *UpdateLineItem `xml:"updatelineitem,omitempty"`
	// End Choice
}

type Updateccpayitem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Description   string        `xml:"description,omitempty"`
	Paymentamount string        `xml:"paymentamount,omitempty"`
	DepartmentID  string        `xml:"departmentid,omitempty"`
	LocationID    string        `xml:"locationid,omitempty"`
	CustomerID    string        `xml:"customerid,omitempty"`
	VendorID      string        `xml:"vendorid,omitempty"`
	EmployeeID    string        `xml:"employeeid,omitempty"`
	ProjectID     string        `xml:"projectid,omitempty"`
	ItemID        string        `xml:"itemid,omitempty"`
	ClassID       string        `xml:"classid,omitempty"`
	ContractID    string        `xml:"contractid,omitempty"`
	WarehouseID   string        `xml:"warehouseid,omitempty"`
	CustomFields  *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updateccpayitems struct {
	// Start Choice
	Ccpayitem       *CCPayItem       `xml:"ccpayitem,omitempty"`
	Updateccpayitem *Updateccpayitem `xml:"updateccpayitem,omitempty"`
	// End Choice
}

type Updateentry struct {
	// Start Sequence
	Value        string        `xml:"value,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updateexpense struct {
	// Start Sequence
	// Start Choice
	ExpenseType string `xml:"expensetype,omitempty"`
	GLAccountNo string `xml:"glaccountno,omitempty"`
	// End Choice
	Amount       string        `xml:"amount,omitempty"`
	Currency     string        `xml:"currency,omitempty"`
	TrxAmount    string        `xml:"trx_amount,omitempty"`
	ExchrateDate *DateYMD      `xml:"exchratedate,omitempty"`
	ExchrateType string        `xml:"exchratetype,omitempty"`
	Exchrate     string        `xml:"exchrate,omitempty"`
	ExpenseDate  *DateYMD      `xml:"expensedate,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	Form1099     string        `xml:"form1099,omitempty"`
	Form1099Type string        `xml:"form1099type,omitempty"`
	Form1099box  string        `xml:"form1099box,omitempty"`
	Paidfor      string        `xml:"paidfor,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	ExppmtType   string        `xml:"exppmttype,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Rate         string        `xml:"rate,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updateexpenseadjustment struct {
	// Start Sequence
	// Start Choice
	ExpenseType string `xml:"expensetype,omitempty"`
	GLAccountNo string `xml:"glaccountno,omitempty"`
	// End Choice
	Amount       string        `xml:"amount,omitempty"`
	Currency     string        `xml:"currency,omitempty"`
	TrxAmount    string        `xml:"trx_amount,omitempty"`
	ExchrateDate *DateYMD      `xml:"exchratedate,omitempty"`
	ExchrateType string        `xml:"exchratetype,omitempty"`
	Exchrate     string        `xml:"exchrate,omitempty"`
	ExpenseDate  *DateYMD      `xml:"expensedate,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	ExppmtType   string        `xml:"exppmttype,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Rate         string        `xml:"rate,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Updateexpenseadjustments struct {
	// Start Choice
	Expenseadjustment       *Expenseadjustment       `xml:"expenseadjustment,omitempty"`
	Updateexpenseadjustment *Updateexpenseadjustment `xml:"updateexpenseadjustment,omitempty"`
	// End Choice
}

type Updateexpenses struct {
	// Start Choice
	Expense       *Expense       `xml:"expense,omitempty"`
	Updateexpense *Updateexpense `xml:"updateexpense,omitempty"`
	// End Choice
}

type UpdateICTransItem struct {
	// Start Sequence
	ItemID       string        `xml:"itemid,omitempty"`
	Itemdesc     string        `xml:"itemdesc,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Unit         string        `xml:"unit,omitempty"`
	Cost         string        `xml:"cost,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	Itemdetails  *Itemdetails  `xml:"itemdetails,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type UpdateICTransItems struct {
	// Start Choice
	ICTransItem       *ICTransItem       `xml:"ictransitem,omitempty"`
	UpdateICTransItem *UpdateICTransItem `xml:"updateictransitem,omitempty"`
	// End Choice
}

type Updateinvoiceitems struct {
	// Start Choice
	LineItem       *LineItem       `xml:"lineitem,omitempty"`
	UpdateLineItem *UpdateLineItem `xml:"updatelineitem,omitempty"`
	// End Choice
}

type UpdateLineItem struct {
	// Start Sequence
	// Start Choice
	AccountLabel string `xml:"accountlabel,omitempty"`
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	// End Choice
	OffsetGLAccountNo string        `xml:"offsetglaccountno,omitempty"`
	Amount            string        `xml:"amount,omitempty"`
	Memo              string        `xml:"memo,omitempty"`
	LocationID        string        `xml:"locationid,omitempty"`
	DepartmentID      string        `xml:"departmentid,omitempty"`
	Item1099          string        `xml:"item1099,omitempty"`
	Form1099Type      string        `xml:"form1099type,omitempty"`
	Form1099box       string        `xml:"form1099box,omitempty"`
	CustomFields      *CustomFields `xml:"customfields,omitempty"`
	Revrectemplate    string        `xml:"revrectemplate,omitempty"`
	Defrevaccount     string        `xml:"defrevaccount,omitempty"`
	RevrecstartDate   *DateYMD      `xml:"revrecstartdate,omitempty"`
	RevrecendDate     *DateYMD      `xml:"revrecenddate,omitempty"`
	ProjectID         string        `xml:"projectid,omitempty"`
	CustomerID        string        `xml:"customerid,omitempty"`
	VendorID          string        `xml:"vendorid,omitempty"`
	EmployeeID        string        `xml:"employeeid,omitempty"`
	ItemID            string        `xml:"itemid,omitempty"`
	ClassID           string        `xml:"classid,omitempty"`
	ContractID        string        `xml:"contractid,omitempty"`
	WarehouseID       string        `xml:"warehouseid,omitempty"`
	Billable          string        `xml:"billable,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updatepotransitem struct {
	// Start Sequence
	ItemID       string        `xml:"itemid,omitempty"`
	Itemdesc     string        `xml:"itemdesc,omitempty"`
	Taxable      string        `xml:"taxable,omitempty"`
	WarehouseID  string        `xml:"warehouseid,omitempty"`
	Quantity     string        `xml:"quantity,omitempty"`
	Unit         string        `xml:"unit,omitempty"`
	Price        string        `xml:"price,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	Memo         string        `xml:"memo,omitempty"`
	Itemdetails  *Itemdetails  `xml:"itemdetails,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	Billable     string        `xml:"billable,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updatepotransitems struct {
	// Start Choice
	Potransitem       *Potransitem       `xml:"potransitem,omitempty"`
	Updatepotransitem *Updatepotransitem `xml:"updatepotransitem,omitempty"`
	// End Choice
}

type Updatesotransitem struct {
	// Start Sequence
	Bundlenumber      string             `xml:"bundlenumber,omitempty"`
	ItemID            string             `xml:"itemid,omitempty"`
	Itemdesc          string             `xml:"itemdesc,omitempty"`
	Taxable           string             `xml:"taxable,omitempty"`
	WarehouseID       string             `xml:"warehouseid,omitempty"`
	Quantity          string             `xml:"quantity,omitempty"`
	Unit              string             `xml:"unit,omitempty"`
	Discountpercent   string             `xml:"discountpercent,omitempty"`
	Price             string             `xml:"price,omitempty"`
	Discsurchargememo string             `xml:"discsurchargememo,omitempty"`
	LocationID        string             `xml:"locationid,omitempty"`
	DepartmentID      string             `xml:"departmentid,omitempty"`
	Memo              string             `xml:"memo,omitempty"`
	Itemdetails       *Itemdetails       `xml:"itemdetails,omitempty"`
	CustomFields      *CustomFields      `xml:"customfields,omitempty"`
	Revrectemplate    string             `xml:"revrectemplate,omitempty"`
	RevrecstartDate   *DateYMD           `xml:"revrecstartdate,omitempty"`
	RevrecendDate     *DateYMD           `xml:"revrecenddate,omitempty"`
	Renewalmacro      string             `xml:"renewalmacro,omitempty"`
	ProjectID         string             `xml:"projectid,omitempty"`
	CustomerID        string             `xml:"customerid,omitempty"`
	VendorID          string             `xml:"vendorid,omitempty"`
	EmployeeID        string             `xml:"employeeid,omitempty"`
	ClassID           string             `xml:"classid,omitempty"`
	ContractID        string             `xml:"contractid,omitempty"`
	Fulfillmentstatus *Fulfillmentstatus `xml:"fulfillmentstatus,omitempty"`
	TaskNo            string             `xml:"taskno,omitempty"`
	Billingtemplate   string             `xml:"billingtemplate,omitempty"`
	Dropship          string             `xml:"dropship,omitempty"`
	// End Sequence
	LineNum string `xml:"line_num,attr"`
}

type Updatesotransitems struct {
	// Start Choice
	Sotransitem       *Sotransitem       `xml:"sotransitem,omitempty"`
	Updatesotransitem *Updatesotransitem `xml:"updatesotransitem,omitempty"`
	// End Choice
}

type Updatesubtotal struct {
	// Start Sequence
	Description  string        `xml:"description"`
	Total        string        `xml:"total"`
	Absval       string        `xml:"absval,omitempty"`
	Percentval   string        `xml:"percentval,omitempty"`
	LocationID   string        `xml:"locationid,omitempty"`
	DepartmentID string        `xml:"departmentid,omitempty"`
	ProjectID    string        `xml:"projectid,omitempty"`
	CustomerID   string        `xml:"customerid,omitempty"`
	VendorID     string        `xml:"vendorid,omitempty"`
	EmployeeID   string        `xml:"employeeid,omitempty"`
	ClassID      string        `xml:"classid,omitempty"`
	ItemID       string        `xml:"itemid,omitempty"`
	ContractID   string        `xml:"contractid,omitempty"`
	CustomFields *CustomFields `xml:"customfields,omitempty"`
	// End Sequence
}

type Updatesubtotals struct {
	// Start Sequence
	Updatesubtotal []Updatesubtotal `xml:"updatesubtotal"`
	// End Sequence
}

type ValiDate struct {
	// Start Sequence
	Any string `xml:",innerxml"`
	// End Sequence
}

type VendLineItem struct {
	// Start Sequence
	VendorID     string `xml:"vendorid"`
	StockNo      string `xml:"stockno,omitempty"`
	Leadtime     string `xml:"leadtime,omitempty"`
	Econorderqty string `xml:"econorderqty,omitempty"`
	// End Sequence
}

type VendLineItems struct {
	// Start Sequence
	VendLineItem []VendLineItem `xml:"vendlineitem"`
	// End Sequence
}

type Visibility struct {
	// Start Sequence
	VisibilityType  string            `xml:"visibility_type"`
	RestrictedLocs  []RestrictedLocs  `xml:"restricted_locs,omitempty"`
	RestrictedDepts []RestrictedDepts `xml:"restricted_depts,omitempty"`
	// End Sequence
}

type VoidAppaymentrequest struct {
	// Start Sequence
	Appaymentkeys APPaymentKeys `xml:"appaymentkeys"`
	// End Sequence
}

type WhsLineItem struct {
	// Start Sequence
	WhsID             string   `xml:"whsid"`
	Cycle             string   `xml:"cycle,omitempty"`
	Stdcost           string   `xml:"stdcost,omitempty"`
	Lastcost          string   `xml:"lastcost,omitempty"`
	Avgcost           string   `xml:"avgcost,omitempty"`
	Reordermethod     string   `xml:"reordermethod,omitempty"`
	Economyorderqty   string   `xml:"economyorderqty,omitempty"`
	Reorder           string   `xml:"reorder,omitempty"`
	Minorderqty       string   `xml:"minorderqty,omitempty"`
	Maxorderqty       string   `xml:"maxorderqty,omitempty"`
	Minstock          string   `xml:"minstock,omitempty"`
	Maxstock          string   `xml:"maxstock,omitempty"`
	Datelastsold      *DateYMD `xml:"datelastsold,omitempty"`
	Datelastrecvd     *DateYMD `xml:"datelastrecvd,omitempty"`
	Begbalqty         string   `xml:"begbalqty,omitempty"`
	Begbalprice       string   `xml:"begbalprice,omitempty"`
	Defaultsubsection string   `xml:"defaultsubsection,omitempty"`
	DefaultAisle      string   `xml:"default_aisle,omitempty"`
	DefaultRow        string   `xml:"default_row,omitempty"`
	DefaultBin        string   `xml:"default_bin,omitempty"`
	// End Sequence
}

type WhsLineItems struct {
	// Start Sequence
	WhsLineItem []WhsLineItem `xml:"whslineitem"`
	// End Sequence
}

type WUccpayitem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Description   string `xml:"description,omitempty"`
	Paymentamount string `xml:"paymentamount"`
	DepartmentID  string `xml:"departmentid,omitempty"`
	LocationID    string `xml:"locationid,omitempty"`
	// End Sequence
}

type WUccpayitems struct {
	// Start Sequence
	WUccpayitem []WUccpayitem `xml:"wuccpayitem"`
	// End Sequence
}

type WUcctransaction struct {
	// Start Sequence
	CreditcardID string       `xml:"creditcardid"`
	Datecreated  *DateYMD     `xml:"datecreated"`
	Payee        string       `xml:"payee,omitempty"`
	ReferenceNo  string       `xml:"referenceno,omitempty"`
	Description  string       `xml:"description,omitempty"`
	WUccpayitems WUccpayitems `xml:"wuccpayitems"`
	// End Sequence
}

type WUcctransactions struct {
	// Start Sequence
	WUcctransaction []WUcctransaction `xml:"wucctransaction"`
	// End Sequence
}

type WUdisbursement struct {
	// Start Sequence
	BankAccountID string   `xml:"bankaccountid"`
	Datecreated   *DateYMD `xml:"datecreated"`
	// Start Choice
	VendorID string `xml:"vendorid,omitempty"`
	Payee    string `xml:"payee,omitempty"`
	// End Choice
	ReferenceNo         string              `xml:"referenceno,omitempty"`
	Description         string              `xml:"description,omitempty"`
	WUdisbursementitems WUdisbursementitems `xml:"wudisbursementitems"`
	// End Sequence
}

type WUdisbursementitem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Description  string `xml:"description,omitempty"`
	Amount       string `xml:"amount"`
	Item1099     string `xml:"item1099,omitempty"`
	DepartmentID string `xml:"departmentid,omitempty"`
	LocationID   string `xml:"locationid,omitempty"`
	// End Sequence
}

type WUdisbursementitems struct {
	// Start Sequence
	WUdisbursementitem []WUdisbursementitem `xml:"wudisbursementitem"`
	// End Sequence
}

type WUdisbursements struct {
	// Start Sequence
	WUdisbursement []WUdisbursement `xml:"wudisbursement"`
	// End Sequence
}

type WUentryitem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Amount       string `xml:"amount"`
	TrType       string `xml:"trtype"`
	DepartmentID string `xml:"departmentid,omitempty"`
	LocationID   string `xml:"locationid,omitempty"`
	Description  string `xml:"description,omitempty"`
	Document     string `xml:"document,omitempty"`
	// End Sequence
}

type WUentryitems struct {
	// Start Sequence
	WUentryitem []WUentryitem `xml:"wuentryitem"`
	// End Sequence
}

type WUjournalentries struct {
	// Start Sequence
	WUjournalentry []WUjournalentry `xml:"wujournalentry"`
	// End Sequence
}

type WUjournalentry struct {
	// Start Sequence
	JournalID    string       `xml:"journalid"`
	Datecreated  *DateYMD     `xml:"datecreated"`
	ReferenceNo  string       `xml:"referenceno,omitempty"`
	Description  string       `xml:"description,omitempty"`
	WUentryitems WUentryitems `xml:"wuentryitems"`
	// End Sequence
}

type WUReceipt struct {
	// Start Sequence
	BankAccountID string   `xml:"bankaccountid"`
	Datecreated   *DateYMD `xml:"datecreated"`
	DepositID     string   `xml:"depositid"`
	DepositDate   *DateYMD `xml:"depositdate"`
	// Start Choice
	CustomerID string `xml:"customerid,omitempty"`
	Payer      string `xml:"payer,omitempty"`
	// End Choice
	ReferenceNo    string         `xml:"referenceno,omitempty"`
	Description    string         `xml:"description,omitempty"`
	WUReceiptItems WUReceiptItems `xml:"wureceiptitems"`
	// End Sequence
}

type WUReceiptItem struct {
	// Start Sequence
	// Start Choice
	GLAccountNo  string `xml:"glaccountno,omitempty"`
	AccountLabel string `xml:"accountlabel,omitempty"`
	// End Choice
	Description  string `xml:"description,omitempty"`
	Amount       string `xml:"amount"`
	DepartmentID string `xml:"departmentid,omitempty"`
	LocationID   string `xml:"locationid,omitempty"`
	// End Sequence
}

type WUReceiptItems struct {
	// Start Sequence
	WUReceiptItem []WUReceiptItem `xml:"wureceiptitem"`
	// End Sequence
}

type WUReceipts struct {
	// Start Sequence
	WUReceipt []WUReceipt `xml:"wureceipt"`
	// End Sequence
}
